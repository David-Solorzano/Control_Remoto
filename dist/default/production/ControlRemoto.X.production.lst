

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 27 19:40:36 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _IPR1bits	set	3999
    57  0000                     _PIE1bits	set	3997
    58  0000                     _T1CONbits	set	4045
    59  0000                     _TMR1L	set	4046
    60  0000                     _TMR1H	set	4047
    61  0000                     _RCREG	set	4014
    62  0000                     _TXREG	set	4013
    63  0000                     _RCSTAbits	set	4011
    64  0000                     _TXSTAbits	set	4012
    65  0000                     _SPBRG	set	4015
    66  0000                     _TRISCbits	set	3988
    67  0000                     _PORTBbits	set	3969
    68  0000                     _LATBbits	set	3978
    69  0000                     _ADRESH	set	4036
    70  0000                     _TRISBbits	set	3987
    71  0000                     _ADCON2bits	set	4032
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1	set	4033
    74  0000                     _INTCON3bits	set	4080
    75  0000                     _INTCONbits	set	4082
    76  0000                     _TMR1IF	set	31984
    77  0000                     _RCIF	set	31989
    78  0000                     _RBIF	set	32656
    79  0000                     _INT1F	set	32640
    80  0000                     _INT0F	set	32657
    81  0000                     _INTEDG1	set	32653
    82  0000                     _INTEDG0	set	32654
    83                           
    84                           	psect	smallconst
    85  000800                     __psmallconst:
    86                           	callstack 0
    87  000800  00                 	db	0
    88  000801                     STR_5:
    89  000801  31                 	db	49	;'1'
    90  000802  30                 	db	48	;'0'
    91  000803  00                 	db	0
    92  000804                     STR_7:
    93  000804  31                 	db	49	;'1'
    94  000805  00                 	db	0
    95  000806                     STR_8:
    96  000806  32                 	db	50	;'2'
    97  000807  00                 	db	0
    98  000808                     STR_9:
    99  000808  33                 	db	51	;'3'
   100  000809  00                 	db	0
   101  00080A                     STR_10:
   102  00080A  34                 	db	52	;'4'
   103  00080B  00                 	db	0
   104  00080C                     STR_11:
   105  00080C  35                 	db	53	;'5'
   106  00080D  00                 	db	0
   107  00080E                     STR_1:
   108  00080E  36                 	db	54	;'6'
   109  00080F  00                 	db	0
   110  000810                     STR_2:
   111  000810  37                 	db	55	;'7'
   112  000811  00                 	db	0
   113  000812                     STR_3:
   114  000812  38                 	db	56	;'8'
   115  000813  00                 	db	0
   116  000814                     STR_4:
   117  000814  39                 	db	57	;'9'
   118  000815  00                 	db	0
   119  000816  00                 	db	0	; dummy byte at the end
   120  0000                     
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124  000C64                     __pcinit:
   125                           	callstack 0
   126  000C64                     start_initialization:
   127                           	callstack 0
   128  000C64                     __initialization:
   129                           	callstack 0
   130  000C64                     end_of_initialization:
   131                           	callstack 0
   132  000C64                     __end_of__initialization:
   133                           	callstack 0
   134  000C64  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  000C66  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  000C68  0E00               	movlw	low (__Lsmallconst shr (0+16))
   137  000C6A  6EF8               	movwf	tblptru,c
   138  000C6C  0E08               	movlw	high __Lsmallconst
   139  000C6E  6EF7               	movwf	tblptrh,c
   140  000C70  0100               	movlb	0
   141  000C72  EF0C  F004         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	callstack 0
   146  000001                     i2USART_Tx@data:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x0
   150  000001                     	ds	1
   151  000002                     ?___awdiv:
   152                           	callstack 0
   153  000002                     ?___aldiv:
   154                           	callstack 0
   155  000002                     USART_Tx@data:
   156                           	callstack 0
   157  000002                     ___awdiv@dividend:
   158                           	callstack 0
   159  000002                     ___aldiv@dividend:
   160                           	callstack 0
   161                           
   162                           ; 4 bytes @ 0x1
   163  000002                     	ds	2
   164  000004                     ___awdiv@divisor:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x3
   168  000004                     	ds	2
   169  000006                     ___awdiv@counter:
   170                           	callstack 0
   171  000006                     ___aldiv@divisor:
   172                           	callstack 0
   173                           
   174                           ; 4 bytes @ 0x5
   175  000006                     	ds	1
   176  000007                     ___awdiv@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x6
   180  000007                     	ds	1
   181  000008                     ___awdiv@quotient:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x7
   185  000008                     	ds	2
   186  00000A                     ___aldiv@counter:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x9
   190  00000A                     	ds	1
   191  00000B                     ___aldiv@sign:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xA
   195  00000B                     	ds	1
   196  00000C                     ___aldiv@quotient:
   197                           	callstack 0
   198                           
   199                           ; 4 bytes @ 0xB
   200  00000C                     	ds	4
   201  000010                     USART_Init@baud:
   202                           	callstack 0
   203                           
   204                           ; 4 bytes @ 0xF
   205  000010                     	ds	4
   206  000014                     _USART_Init$1372:
   207                           	callstack 0
   208                           
   209                           ; 4 bytes @ 0x13
   210  000014                     	ds	4
   211  000018                     main@umbralViejo:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x17
   215  000018                     	ds	2
   216  00001A                     main@umbralNuevo:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x19
   220  00001A                     	ds	2
   221  00001C                     main@lectura:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x1B
   225  00001C                     	ds	2
   226                           
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 16 in file "control.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  lectura         2   27[COMRAM] int 
   237 ;;  umbralNuevo     2   25[COMRAM] int 
   238 ;;  umbralViejo     2   23[COMRAM] int 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   248 ;;      Params:         0       0       0       0       0       0       0       0       0
   249 ;;      Locals:         6       0       0       0       0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0
   251 ;;      Totals:         6       0       0       0       0       0       0       0       0
   252 ;;Total ram usage:        6 bytes
   253 ;; Hardware stack levels required when called:    4
   254 ;; This function calls:
   255 ;;		_USART_Init
   256 ;;		_USART_Tx
   257 ;;		___awdiv
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text0
   264  000818                     __ptext0:
   265                           	callstack 0
   266  000818                     _main:
   267                           	callstack 27
   268  000818                     
   269                           ;control.c: 17:     USART_Init(9600);
   270  000818  0E80               	movlw	128
   271  00081A  6E10               	movwf	USART_Init@baud^0,c
   272  00081C  0E25               	movlw	37
   273  00081E  6E11               	movwf	(USART_Init@baud+1)^0,c
   274  000820  0E00               	movlw	0
   275  000822  6E12               	movwf	(USART_Init@baud+2)^0,c
   276  000824  0E00               	movlw	0
   277  000826  6E13               	movwf	(USART_Init@baud+3)^0,c
   278  000828  ECFA  F005         	call	_USART_Init	;wreg free
   279  00082C                     
   280                           ;control.c: 20:     int umbralNuevo = 0;
   281  00082C  0E00               	movlw	0
   282  00082E  6E1B               	movwf	(main@umbralNuevo+1)^0,c
   283  000830  0E00               	movlw	0
   284  000832  6E1A               	movwf	main@umbralNuevo^0,c
   285  000834                     
   286                           ;control.c: 22:     INTCONbits.GIE = 1;
   287  000834  8EF2               	bsf	242,7,c	;volatile
   288  000836                     
   289                           ;control.c: 23:     INTCONbits.RBIF = 0;
   290  000836  90F2               	bcf	242,0,c	;volatile
   291  000838                     
   292                           ;control.c: 24:     INTCONbits.RBIE = 1;
   293  000838  86F2               	bsf	242,3,c	;volatile
   294  00083A                     
   295                           ;control.c: 25:     INTCONbits.INT0F = 0;
   296  00083A  92F2               	bcf	242,1,c	;volatile
   297  00083C                     
   298                           ;control.c: 26:     INTCONbits.INT0E = 1;
   299  00083C  88F2               	bsf	242,4,c	;volatile
   300  00083E                     
   301                           ;control.c: 27:     INTCON3bits.INT1F = 0;
   302  00083E  90F0               	bcf	240,0,c	;volatile
   303  000840                     
   304                           ;control.c: 28:     INTCON3bits.INT1E = 1;
   305  000840  86F0               	bsf	240,3,c	;volatile
   306  000842                     
   307                           ;control.c: 29:     INTEDG0 = 0;
   308  000842  9CF1               	bcf	4081,6,c	;volatile
   309  000844                     
   310                           ;control.c: 30:     INTEDG1 = 1;
   311  000844  8AF1               	bsf	4081,5,c	;volatile
   312  000846                     
   313                           ;control.c: 32:     ADCON1 = 0b1110;
   314  000846  0E0E               	movlw	14
   315  000848  6EC1               	movwf	193,c	;volatile
   316  00084A                     
   317                           ;control.c: 33:     ADCON0bits.CHS = 0;
   318  00084A  0EC3               	movlw	-61
   319  00084C  16C2               	andwf	194,f,c	;volatile
   320  00084E                     
   321                           ;control.c: 34:     ADCON2bits.ADFM = 0;
   322  00084E  9EC0               	bcf	192,7,c	;volatile
   323  000850                     
   324                           ;control.c: 35:     ADCON2bits.ADCS = 0b001;
   325  000850  50C0               	movf	192,w,c	;volatile
   326  000852  0BF8               	andlw	-8
   327  000854  0901               	iorlw	1
   328  000856  6EC0               	movwf	192,c	;volatile
   329  000858                     
   330                           ;control.c: 36:     ADCON2bits.ACQT = 0b010;
   331  000858  50C0               	movf	192,w,c	;volatile
   332  00085A  0BC7               	andlw	-57
   333  00085C  0910               	iorlw	16
   334  00085E  6EC0               	movwf	192,c	;volatile
   335  000860                     
   336                           ;control.c: 37:     ADCON0bits.ADON = 1;
   337  000860  80C2               	bsf	194,0,c	;volatile
   338  000862                     
   339                           ;control.c: 39:     TRISBbits.RB0 = 1;
   340  000862  8093               	bsf	147,0,c	;volatile
   341  000864                     
   342                           ;control.c: 40:     TRISBbits.RB1 = 1;
   343  000864  8293               	bsf	147,1,c	;volatile
   344  000866                     
   345                           ;control.c: 41:     TRISBbits.RB2 = 0;
   346  000866  9493               	bcf	147,2,c	;volatile
   347  000868                     
   348                           ;control.c: 42:     TRISBbits.RB4 = 1;
   349  000868  8893               	bsf	147,4,c	;volatile
   350  00086A                     
   351                           ;control.c: 43:     TRISBbits.RB5 = 1;
   352  00086A  8A93               	bsf	147,5,c	;volatile
   353  00086C                     
   354                           ;control.c: 44:     TRISBbits.RB6 = 1;
   355  00086C  8C93               	bsf	147,6,c	;volatile
   356  00086E                     
   357                           ;control.c: 45:     TRISBbits.RB7 = 1;
   358  00086E  8E93               	bsf	147,7,c	;volatile
   359  000870                     
   360                           ;control.c: 47:     USART_Tx(6);
   361  000870  0E06               	movlw	6
   362  000872  EC3B  F006         	call	_USART_Tx
   363  000876                     l1200:
   364                           
   365                           ;control.c: 50:         ADCON0bits.GO_DONE = 1;
   366  000876  82C2               	bsf	194,1,c	;volatile
   367  000878                     l38:
   368  000878  B2C2               	btfsc	194,1,c	;volatile
   369  00087A  EF41  F004         	goto	u391
   370  00087E  EF43  F004         	goto	u390
   371  000882                     u391:
   372  000882  EF3C  F004         	goto	l38
   373  000886                     u390:
   374  000886                     
   375                           ;control.c: 52:         umbralViejo = umbralNuevo;
   376  000886  C01A  F018         	movff	main@umbralNuevo,main@umbralViejo
   377  00088A  C01B  F019         	movff	main@umbralNuevo+1,main@umbralViejo+1
   378                           
   379                           ;control.c: 53:         lectura = ADRESH;
   380  00088E  CFC4 F01C          	movff	4036,main@lectura	;volatile
   381  000892  6A1D               	clrf	(main@lectura+1)^0,c
   382  000894                     
   383                           ;control.c: 54:         umbralNuevo = lectura / 51;
   384  000894  C01C  F002         	movff	main@lectura,___awdiv@dividend
   385  000898  C01D  F003         	movff	main@lectura+1,___awdiv@dividend+1
   386  00089C  0E00               	movlw	0
   387  00089E  6E05               	movwf	(___awdiv@divisor+1)^0,c
   388  0008A0  0E33               	movlw	51
   389  0008A2  6E04               	movwf	___awdiv@divisor^0,c
   390  0008A4  EC41  F005         	call	___awdiv	;wreg free
   391  0008A8  C002  F01A         	movff	?___awdiv,main@umbralNuevo
   392  0008AC  C003  F01B         	movff	?___awdiv+1,main@umbralNuevo+1
   393  0008B0                     
   394                           ;control.c: 55:         if (umbralNuevo != umbralViejo){
   395  0008B0  5018               	movf	main@umbralViejo^0,w,c
   396  0008B2  181A               	xorwf	main@umbralNuevo^0,w,c
   397  0008B4  E109               	bnz	u400
   398  0008B6  5019               	movf	(main@umbralViejo+1)^0,w,c
   399  0008B8  181B               	xorwf	(main@umbralNuevo+1)^0,w,c
   400  0008BA  B4D8               	btfsc	status,2,c
   401  0008BC  EF62  F004         	goto	u401
   402  0008C0  EF64  F004         	goto	u400
   403  0008C4                     u401:
   404  0008C4  EF3B  F004         	goto	l1200
   405  0008C8                     u400:
   406  0008C8                     
   407                           ;control.c: 56:             if (lectura < 51){
   408  0008C8  BE1D               	btfsc	(main@lectura+1)^0,7,c
   409  0008CA  EF72  F004         	goto	u410
   410  0008CE  501D               	movf	(main@lectura+1)^0,w,c
   411  0008D0  E107               	bnz	u411
   412  0008D2  0E33               	movlw	51
   413  0008D4  5C1C               	subwf	main@lectura^0,w,c
   414  0008D6  B0D8               	btfsc	status,0,c
   415  0008D8  EF70  F004         	goto	u411
   416  0008DC  EF72  F004         	goto	u410
   417  0008E0                     u411:
   418  0008E0  EF78  F004         	goto	l1212
   419  0008E4                     u410:
   420  0008E4                     
   421                           ;control.c: 57:                 USART_Tx("6");
   422  0008E4  0E0E               	movlw	STR_1& (0+255)
   423  0008E6  EC3B  F006         	call	_USART_Tx
   424  0008EA                     
   425                           ;control.c: 58:                 LATBbits.LATB2 ^= 1;
   426  0008EA  748A               	btg	138,2,c	;volatile
   427                           
   428                           ;control.c: 59:             }
   429  0008EC  EF3B  F004         	goto	l1200
   430  0008F0                     l1212:
   431  0008F0  BE1D               	btfsc	(main@lectura+1)^0,7,c
   432  0008F2  EF86  F004         	goto	u420
   433  0008F6  501D               	movf	(main@lectura+1)^0,w,c
   434  0008F8  E107               	bnz	u421
   435  0008FA  0E66               	movlw	102
   436  0008FC  5C1C               	subwf	main@lectura^0,w,c
   437  0008FE  B0D8               	btfsc	status,0,c
   438  000900  EF84  F004         	goto	u421
   439  000904  EF86  F004         	goto	u420
   440  000908                     u421:
   441  000908  EF8C  F004         	goto	l1218
   442  00090C                     u420:
   443  00090C                     
   444                           ;control.c: 61:                 USART_Tx("7");
   445  00090C  0E10               	movlw	STR_2& (0+255)
   446  00090E  EC3B  F006         	call	_USART_Tx
   447  000912                     
   448                           ;control.c: 62:                 LATBbits.LATB2 ^= 1;
   449  000912  748A               	btg	138,2,c	;volatile
   450                           
   451                           ;control.c: 63:             }
   452  000914  EF3B  F004         	goto	l1200
   453  000918                     l1218:
   454  000918  BE1D               	btfsc	(main@lectura+1)^0,7,c
   455  00091A  EF9A  F004         	goto	u430
   456  00091E  501D               	movf	(main@lectura+1)^0,w,c
   457  000920  E107               	bnz	u431
   458  000922  0E9A               	movlw	154
   459  000924  5C1C               	subwf	main@lectura^0,w,c
   460  000926  B0D8               	btfsc	status,0,c
   461  000928  EF98  F004         	goto	u431
   462  00092C  EF9A  F004         	goto	u430
   463  000930                     u431:
   464  000930  EFA0  F004         	goto	l1224
   465  000934                     u430:
   466  000934                     
   467                           ;control.c: 65:                 USART_Tx("8");
   468  000934  0E12               	movlw	STR_3& (0+255)
   469  000936  EC3B  F006         	call	_USART_Tx
   470  00093A                     
   471                           ;control.c: 66:                 LATBbits.LATB2 ^= 1;
   472  00093A  748A               	btg	138,2,c	;volatile
   473                           
   474                           ;control.c: 67:             }
   475  00093C  EF3B  F004         	goto	l1200
   476  000940                     l1224:
   477  000940  BE1D               	btfsc	(main@lectura+1)^0,7,c
   478  000942  EFAE  F004         	goto	u440
   479  000946  501D               	movf	(main@lectura+1)^0,w,c
   480  000948  E107               	bnz	u441
   481  00094A  0ECD               	movlw	205
   482  00094C  5C1C               	subwf	main@lectura^0,w,c
   483  00094E  B0D8               	btfsc	status,0,c
   484  000950  EFAC  F004         	goto	u441
   485  000954  EFAE  F004         	goto	u440
   486  000958                     u441:
   487  000958  EFB4  F004         	goto	l1230
   488  00095C                     u440:
   489  00095C                     
   490                           ;control.c: 69:                 USART_Tx("9");
   491  00095C  0E14               	movlw	STR_4& (0+255)
   492  00095E  EC3B  F006         	call	_USART_Tx
   493  000962                     
   494                           ;control.c: 70:                 LATBbits.LATB2 ^= 1;
   495  000962  748A               	btg	138,2,c	;volatile
   496                           
   497                           ;control.c: 71:             }
   498  000964  EF3B  F004         	goto	l1200
   499  000968                     l1230:
   500                           
   501                           ;control.c: 73:                 USART_Tx("10");
   502  000968  0E01               	movlw	STR_5& (0+255)
   503  00096A  EC3B  F006         	call	_USART_Tx
   504  00096E  EF3B  F004         	goto	l1200
   505  000972  EF07  F000         	goto	start
   506  000976                     __end_of_main:
   507                           	callstack 0
   508                           
   509 ;; *************** function ___awdiv *****************
   510 ;; Defined at:
   511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  dividend        2    1[COMRAM] int 
   514 ;;  divisor         2    3[COMRAM] int 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  quotient        2    7[COMRAM] int 
   517 ;;  sign            1    6[COMRAM] unsigned char 
   518 ;;  counter         1    5[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  2    1[COMRAM] int 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   528 ;;      Params:         4       0       0       0       0       0       0       0       0
   529 ;;      Locals:         4       0       0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0
   531 ;;      Totals:         8       0       0       0       0       0       0       0       0
   532 ;;Total ram usage:        8 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text1
   543  000A82                     __ptext1:
   544                           	callstack 0
   545  000A82                     ___awdiv:
   546                           	callstack 28
   547  000A82  0E00               	movlw	0
   548  000A84  6E07               	movwf	___awdiv@sign^0,c
   549  000A86  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
   550  000A88  EF4A  F005         	goto	u330
   551  000A8C  EF48  F005         	goto	u331
   552  000A90                     u331:
   553  000A90  EF50  F005         	goto	l1108
   554  000A94                     u330:
   555  000A94  6C04               	negf	___awdiv@divisor^0,c
   556  000A96  1E05               	comf	(___awdiv@divisor+1)^0,f,c
   557  000A98  B0D8               	btfsc	status,0,c
   558  000A9A  2A05               	incf	(___awdiv@divisor+1)^0,f,c
   559  000A9C  0E01               	movlw	1
   560  000A9E  6E07               	movwf	___awdiv@sign^0,c
   561  000AA0                     l1108:
   562  000AA0  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
   563  000AA2  EF57  F005         	goto	u340
   564  000AA6  EF55  F005         	goto	u341
   565  000AAA                     u341:
   566  000AAA  EF5D  F005         	goto	l1114
   567  000AAE                     u340:
   568  000AAE  6C02               	negf	___awdiv@dividend^0,c
   569  000AB0  1E03               	comf	(___awdiv@dividend+1)^0,f,c
   570  000AB2  B0D8               	btfsc	status,0,c
   571  000AB4  2A03               	incf	(___awdiv@dividend+1)^0,f,c
   572  000AB6  0E01               	movlw	1
   573  000AB8  1A07               	xorwf	___awdiv@sign^0,f,c
   574  000ABA                     l1114:
   575  000ABA  0E00               	movlw	0
   576  000ABC  6E09               	movwf	(___awdiv@quotient+1)^0,c
   577  000ABE  0E00               	movlw	0
   578  000AC0  6E08               	movwf	___awdiv@quotient^0,c
   579  000AC2  5004               	movf	___awdiv@divisor^0,w,c
   580  000AC4  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
   581  000AC6  B4D8               	btfsc	status,2,c
   582  000AC8  EF68  F005         	goto	u351
   583  000ACC  EF6A  F005         	goto	u350
   584  000AD0                     u351:
   585  000AD0  EF92  F005         	goto	l1136
   586  000AD4                     u350:
   587  000AD4  0E01               	movlw	1
   588  000AD6  6E06               	movwf	___awdiv@counter^0,c
   589  000AD8  EF72  F005         	goto	l1122
   590  000ADC                     l1120:
   591  000ADC  90D8               	bcf	status,0,c
   592  000ADE  3604               	rlcf	___awdiv@divisor^0,f,c
   593  000AE0  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
   594  000AE2  2A06               	incf	___awdiv@counter^0,f,c
   595  000AE4                     l1122:
   596  000AE4  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
   597  000AE6  EF77  F005         	goto	u361
   598  000AEA  EF79  F005         	goto	u360
   599  000AEE                     u361:
   600  000AEE  EF6E  F005         	goto	l1120
   601  000AF2                     u360:
   602  000AF2                     l1124:
   603  000AF2  90D8               	bcf	status,0,c
   604  000AF4  3608               	rlcf	___awdiv@quotient^0,f,c
   605  000AF6  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
   606  000AF8  5004               	movf	___awdiv@divisor^0,w,c
   607  000AFA  5C02               	subwf	___awdiv@dividend^0,w,c
   608  000AFC  5005               	movf	(___awdiv@divisor+1)^0,w,c
   609  000AFE  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
   610  000B00  A0D8               	btfss	status,0,c
   611  000B02  EF85  F005         	goto	u371
   612  000B06  EF87  F005         	goto	u370
   613  000B0A                     u371:
   614  000B0A  EF8C  F005         	goto	l1132
   615  000B0E                     u370:
   616  000B0E  5004               	movf	___awdiv@divisor^0,w,c
   617  000B10  5E02               	subwf	___awdiv@dividend^0,f,c
   618  000B12  5005               	movf	(___awdiv@divisor+1)^0,w,c
   619  000B14  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
   620  000B16  8008               	bsf	___awdiv@quotient^0,0,c
   621  000B18                     l1132:
   622  000B18  90D8               	bcf	status,0,c
   623  000B1A  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
   624  000B1C  3204               	rrcf	___awdiv@divisor^0,f,c
   625  000B1E  2E06               	decfsz	___awdiv@counter^0,f,c
   626  000B20  EF79  F005         	goto	l1124
   627  000B24                     l1136:
   628  000B24  5007               	movf	___awdiv@sign^0,w,c
   629  000B26  B4D8               	btfsc	status,2,c
   630  000B28  EF98  F005         	goto	u381
   631  000B2C  EF9A  F005         	goto	u380
   632  000B30                     u381:
   633  000B30  EF9E  F005         	goto	l1140
   634  000B34                     u380:
   635  000B34  6C08               	negf	___awdiv@quotient^0,c
   636  000B36  1E09               	comf	(___awdiv@quotient+1)^0,f,c
   637  000B38  B0D8               	btfsc	status,0,c
   638  000B3A  2A09               	incf	(___awdiv@quotient+1)^0,f,c
   639  000B3C                     l1140:
   640  000B3C  C008  F002         	movff	___awdiv@quotient,?___awdiv
   641  000B40  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
   642  000B44  0012               	return		;funcret
   643  000B46                     __end_of___awdiv:
   644                           	callstack 0
   645                           
   646 ;; *************** function _USART_Tx *****************
   647 ;; Defined at:
   648 ;;		line 28 in file "LibreriaMicros.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  data            1    wreg     unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  data            1    1[COMRAM] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   662 ;;      Params:         0       0       0       0       0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0       0       0
   665 ;;      Totals:         1       0       0       0       0       0       0       0       0
   666 ;;Total ram usage:        1 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    2
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text2
   677  000C76                     __ptext2:
   678                           	callstack 0
   679  000C76                     _USART_Tx:
   680                           	callstack 28
   681                           
   682                           ;incstack = 0
   683                           ;USART_Tx@data stored from wreg
   684  000C76  6E02               	movwf	USART_Tx@data^0,c
   685  000C78                     
   686                           ;LibreriaMicros.c: 29:     TXREG = data;
   687  000C78  C002  FFAD         	movff	USART_Tx@data,4013	;volatile
   688  000C7C  0012               	return		;funcret
   689  000C7E                     __end_of_USART_Tx:
   690                           	callstack 0
   691                           
   692 ;; *************** function _USART_Init *****************
   693 ;; Defined at:
   694 ;;		line 6 in file "LibreriaMicros.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  baud            4   15[COMRAM] long 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         4       0       0       0       0       0       0       0       0
   709 ;;      Locals:         4       0       0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0
   711 ;;      Totals:         8       0       0       0       0       0       0       0       0
   712 ;;Total ram usage:        8 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    3
   715 ;; This function calls:
   716 ;;		___aldiv
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  000BF4                     __ptext3:
   724                           	callstack 0
   725  000BF4                     _USART_Init:
   726                           	callstack 27
   727  000BF4                     
   728                           ;LibreriaMicros.c: 8:     TRISCbits.RC6 = 0;
   729  000BF4  9C94               	bcf	148,6,c	;volatile
   730                           
   731                           ;LibreriaMicros.c: 9:     TRISCbits.RC7 = 1;
   732  000BF6  8E94               	bsf	148,7,c	;volatile
   733  000BF8                     
   734                           ;LibreriaMicros.c: 12:     SPBRG = (unsigned char)((8000000L/baud)/64)-1;
   735  000BF8  C010  F006         	movff	USART_Init@baud,___aldiv@divisor
   736  000BFC  C011  F007         	movff	USART_Init@baud+1,___aldiv@divisor+1
   737  000C00  C012  F008         	movff	USART_Init@baud+2,___aldiv@divisor+2
   738  000C04  C013  F009         	movff	USART_Init@baud+3,___aldiv@divisor+3
   739  000C08  0E00               	movlw	0
   740  000C0A  6E02               	movwf	___aldiv@dividend^0,c
   741  000C0C  0E12               	movlw	18
   742  000C0E  6E03               	movwf	(___aldiv@dividend+1)^0,c
   743  000C10  0E7A               	movlw	122
   744  000C12  6E04               	movwf	(___aldiv@dividend+2)^0,c
   745  000C14  0E00               	movlw	0
   746  000C16  6E05               	movwf	(___aldiv@dividend+3)^0,c
   747  000C18  ECBB  F004         	call	___aldiv	;wreg free
   748  000C1C  C002  F014         	movff	?___aldiv,_USART_Init$1372
   749  000C20  C003  F015         	movff	?___aldiv+1,_USART_Init$1372+1
   750  000C24  C004  F016         	movff	?___aldiv+2,_USART_Init$1372+2
   751  000C28  C005  F017         	movff	?___aldiv+3,_USART_Init$1372+3
   752                           
   753                           ;LibreriaMicros.c: 12:     SPBRG = (unsigned char)((8000000L/baud)/64)-1;
   754  000C2C  C014  F002         	movff	_USART_Init$1372,___aldiv@dividend
   755  000C30  C015  F003         	movff	_USART_Init$1372+1,___aldiv@dividend+1
   756  000C34  C016  F004         	movff	_USART_Init$1372+2,___aldiv@dividend+2
   757  000C38  C017  F005         	movff	_USART_Init$1372+3,___aldiv@dividend+3
   758  000C3C  0E40               	movlw	64
   759  000C3E  6E06               	movwf	___aldiv@divisor^0,c
   760  000C40  0E00               	movlw	0
   761  000C42  6E07               	movwf	(___aldiv@divisor+1)^0,c
   762  000C44  0E00               	movlw	0
   763  000C46  6E08               	movwf	(___aldiv@divisor+2)^0,c
   764  000C48  0E00               	movlw	0
   765  000C4A  6E09               	movwf	(___aldiv@divisor+3)^0,c
   766  000C4C  ECBB  F004         	call	___aldiv	;wreg free
   767  000C50  0402               	decf	?___aldiv^0,w,c
   768  000C52  6EAF               	movwf	175,c	;volatile
   769  000C54                     
   770                           ;LibreriaMicros.c: 15:     TXSTAbits.BRGH = 0;
   771  000C54  94AC               	bcf	172,2,c	;volatile
   772  000C56                     
   773                           ;LibreriaMicros.c: 16:     TXSTAbits.SYNC = 0;
   774  000C56  98AC               	bcf	172,4,c	;volatile
   775  000C58                     
   776                           ;LibreriaMicros.c: 17:     RCSTAbits.SPEN = 1;
   777  000C58  8EAB               	bsf	171,7,c	;volatile
   778  000C5A                     
   779                           ;LibreriaMicros.c: 20:     TXSTAbits.TX9 = 0;
   780  000C5A  9CAC               	bcf	172,6,c	;volatile
   781  000C5C                     
   782                           ;LibreriaMicros.c: 21:     TXSTAbits.TXEN = 1;
   783  000C5C  8AAC               	bsf	172,5,c	;volatile
   784  000C5E                     
   785                           ;LibreriaMicros.c: 24:     RCSTAbits.RC9 = 0;
   786  000C5E  9CAB               	bcf	171,6,c	;volatile
   787  000C60                     
   788                           ;LibreriaMicros.c: 25:     RCSTAbits.CREN = 1;
   789  000C60  88AB               	bsf	171,4,c	;volatile
   790  000C62  0012               	return		;funcret
   791  000C64                     __end_of_USART_Init:
   792                           	callstack 0
   793                           
   794 ;; *************** function ___aldiv *****************
   795 ;; Defined at:
   796 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  dividend        4    1[COMRAM] long 
   799 ;;  divisor         4    5[COMRAM] long 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  quotient        4   11[COMRAM] long 
   802 ;;  sign            1   10[COMRAM] unsigned char 
   803 ;;  counter         1    9[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  4    1[COMRAM] long 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   813 ;;      Params:         8       0       0       0       0       0       0       0       0
   814 ;;      Locals:         6       0       0       0       0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0
   816 ;;      Totals:        14       0       0       0       0       0       0       0       0
   817 ;;Total ram usage:       14 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_USART_Init
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text4
   828  000976                     __ptext4:
   829                           	callstack 0
   830  000976                     ___aldiv:
   831                           	callstack 27
   832  000976  0E00               	movlw	0
   833  000978  6E0B               	movwf	___aldiv@sign^0,c
   834  00097A  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
   835  00097C  EFC4  F004         	goto	u270
   836  000980  EFC2  F004         	goto	u271
   837  000984                     u271:
   838  000984  EFCE  F004         	goto	l1046
   839  000988                     u270:
   840  000988  1E09               	comf	(___aldiv@divisor+3)^0,f,c
   841  00098A  1E08               	comf	(___aldiv@divisor+2)^0,f,c
   842  00098C  1E07               	comf	(___aldiv@divisor+1)^0,f,c
   843  00098E  6C06               	negf	___aldiv@divisor^0,c
   844  000990  0E00               	movlw	0
   845  000992  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
   846  000994  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
   847  000996  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
   848  000998  0E01               	movlw	1
   849  00099A  6E0B               	movwf	___aldiv@sign^0,c
   850  00099C                     l1046:
   851  00099C  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
   852  00099E  EFD5  F004         	goto	u280
   853  0009A2  EFD3  F004         	goto	u281
   854  0009A6                     u281:
   855  0009A6  EFDF  F004         	goto	l1052
   856  0009AA                     u280:
   857  0009AA  1E05               	comf	(___aldiv@dividend+3)^0,f,c
   858  0009AC  1E04               	comf	(___aldiv@dividend+2)^0,f,c
   859  0009AE  1E03               	comf	(___aldiv@dividend+1)^0,f,c
   860  0009B0  6C02               	negf	___aldiv@dividend^0,c
   861  0009B2  0E00               	movlw	0
   862  0009B4  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
   863  0009B6  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
   864  0009B8  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
   865  0009BA  0E01               	movlw	1
   866  0009BC  1A0B               	xorwf	___aldiv@sign^0,f,c
   867  0009BE                     l1052:
   868  0009BE  0E00               	movlw	0
   869  0009C0  6E0C               	movwf	___aldiv@quotient^0,c
   870  0009C2  0E00               	movlw	0
   871  0009C4  6E0D               	movwf	(___aldiv@quotient+1)^0,c
   872  0009C6  0E00               	movlw	0
   873  0009C8  6E0E               	movwf	(___aldiv@quotient+2)^0,c
   874  0009CA  0E00               	movlw	0
   875  0009CC  6E0F               	movwf	(___aldiv@quotient+3)^0,c
   876  0009CE  5006               	movf	___aldiv@divisor^0,w,c
   877  0009D0  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
   878  0009D2  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
   879  0009D4  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
   880  0009D6  B4D8               	btfsc	status,2,c
   881  0009D8  EFF0  F004         	goto	u291
   882  0009DC  EFF2  F004         	goto	u290
   883  0009E0                     u291:
   884  0009E0  EF28  F005         	goto	l1074
   885  0009E4                     u290:
   886  0009E4  0E01               	movlw	1
   887  0009E6  6E0A               	movwf	___aldiv@counter^0,c
   888  0009E8  EFFC  F004         	goto	l1060
   889  0009EC                     l1058:
   890  0009EC  90D8               	bcf	status,0,c
   891  0009EE  3606               	rlcf	___aldiv@divisor^0,f,c
   892  0009F0  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
   893  0009F2  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
   894  0009F4  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
   895  0009F6  2A0A               	incf	___aldiv@counter^0,f,c
   896  0009F8                     l1060:
   897  0009F8  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
   898  0009FA  EF01  F005         	goto	u301
   899  0009FE  EF03  F005         	goto	u300
   900  000A02                     u301:
   901  000A02  EFF6  F004         	goto	l1058
   902  000A06                     u300:
   903  000A06                     l1062:
   904  000A06  90D8               	bcf	status,0,c
   905  000A08  360C               	rlcf	___aldiv@quotient^0,f,c
   906  000A0A  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
   907  000A0C  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
   908  000A0E  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
   909  000A10  5006               	movf	___aldiv@divisor^0,w,c
   910  000A12  5C02               	subwf	___aldiv@dividend^0,w,c
   911  000A14  5007               	movf	(___aldiv@divisor+1)^0,w,c
   912  000A16  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
   913  000A18  5008               	movf	(___aldiv@divisor+2)^0,w,c
   914  000A1A  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
   915  000A1C  5009               	movf	(___aldiv@divisor+3)^0,w,c
   916  000A1E  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
   917  000A20  A0D8               	btfss	status,0,c
   918  000A22  EF15  F005         	goto	u311
   919  000A26  EF17  F005         	goto	u310
   920  000A2A                     u311:
   921  000A2A  EF20  F005         	goto	l1070
   922  000A2E                     u310:
   923  000A2E  5006               	movf	___aldiv@divisor^0,w,c
   924  000A30  5E02               	subwf	___aldiv@dividend^0,f,c
   925  000A32  5007               	movf	(___aldiv@divisor+1)^0,w,c
   926  000A34  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
   927  000A36  5008               	movf	(___aldiv@divisor+2)^0,w,c
   928  000A38  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
   929  000A3A  5009               	movf	(___aldiv@divisor+3)^0,w,c
   930  000A3C  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
   931  000A3E  800C               	bsf	___aldiv@quotient^0,0,c
   932  000A40                     l1070:
   933  000A40  90D8               	bcf	status,0,c
   934  000A42  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
   935  000A44  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
   936  000A46  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
   937  000A48  3206               	rrcf	___aldiv@divisor^0,f,c
   938  000A4A  2E0A               	decfsz	___aldiv@counter^0,f,c
   939  000A4C  EF03  F005         	goto	l1062
   940  000A50                     l1074:
   941  000A50  500B               	movf	___aldiv@sign^0,w,c
   942  000A52  B4D8               	btfsc	status,2,c
   943  000A54  EF2E  F005         	goto	u321
   944  000A58  EF30  F005         	goto	u320
   945  000A5C                     u321:
   946  000A5C  EF38  F005         	goto	l1078
   947  000A60                     u320:
   948  000A60  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
   949  000A62  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
   950  000A64  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
   951  000A66  6C0C               	negf	___aldiv@quotient^0,c
   952  000A68  0E00               	movlw	0
   953  000A6A  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
   954  000A6C  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
   955  000A6E  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
   956  000A70                     l1078:
   957  000A70  C00C  F002         	movff	___aldiv@quotient,?___aldiv
   958  000A74  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
   959  000A78  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
   960  000A7C  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
   961  000A80  0012               	return		;funcret
   962  000A82                     __end_of___aldiv:
   963                           	callstack 0
   964                           
   965 ;; *************** function _ISR *****************
   966 ;; Defined at:
   967 ;;		line 79 in file "control.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   981 ;;      Params:         0       0       0       0       0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    1
   988 ;; This function calls:
   989 ;;		i2_USART_Tx
   990 ;; This function is called by:
   991 ;;		Interrupt level 2
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	intcode
   996  000008                     __pintcode:
   997                           	callstack 0
   998  000008                     _ISR:
   999                           	callstack 27
  1000                           
  1001                           ;incstack = 0
  1002  000008  821E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1003  00000A  EDA3  F005         	call	int_func,f	;refresh shadow registers
  1004                           
  1005                           	psect	intcode_body
  1006  000B46                     __pintcode_body:
  1007                           	callstack 27
  1008  000B46                     int_func:
  1009                           	callstack 27
  1010  000B46  0006               	pop		; remove dummy address from shadow register refresh
  1011  000B48                     
  1012                           ;control.c: 80:     if (INT0F){
  1013  000B48  A2F2               	btfss	4082,1,c	;volatile
  1014  000B4A  EFA9  F005         	goto	i2u45_41
  1015  000B4E  EFAB  F005         	goto	i2u45_40
  1016  000B52                     i2u45_41:
  1017  000B52  EFB0  F005         	goto	i2l1240
  1018  000B56                     i2u45_40:
  1019  000B56                     
  1020                           ;control.c: 81:         USART_Tx("0");
  1021  000B56  0E02               	movlw	(STR_5+1)& (0+255)
  1022  000B58  EC3F  F006         	call	i2_USART_Tx
  1023  000B5C                     
  1024                           ;control.c: 82:         INT0F = 0;
  1025  000B5C  92F2               	bcf	4082,1,c	;volatile
  1026  000B5E                     
  1027                           ;control.c: 83:         LATBbits.LATB2 ^= 1;
  1028  000B5E  748A               	btg	138,2,c	;volatile
  1029  000B60                     i2l1240:
  1030                           
  1031                           ;control.c: 85:     if (INT1F){
  1032  000B60  A0F0               	btfss	4080,0,c	;volatile
  1033  000B62  EFB5  F005         	goto	i2u46_41
  1034  000B66  EFB7  F005         	goto	i2u46_40
  1035  000B6A                     i2u46_41:
  1036  000B6A  EFBC  F005         	goto	i2l1248
  1037  000B6E                     i2u46_40:
  1038  000B6E                     
  1039                           ;control.c: 86:         USART_Tx("1");
  1040  000B6E  0E04               	movlw	STR_7& (0+255)
  1041  000B70  EC3F  F006         	call	i2_USART_Tx
  1042  000B74                     
  1043                           ;control.c: 87:         INT1F = 0;
  1044  000B74  90F0               	bcf	4080,0,c	;volatile
  1045  000B76                     
  1046                           ;control.c: 88:         LATBbits.LATB2 ^= 1;
  1047  000B76  748A               	btg	138,2,c	;volatile
  1048  000B78                     i2l1248:
  1049                           
  1050                           ;control.c: 90:     if (RBIF){
  1051  000B78  A0F2               	btfss	4082,0,c	;volatile
  1052  000B7A  EFC1  F005         	goto	i2u47_41
  1053  000B7E  EFC3  F005         	goto	i2u47_40
  1054  000B82                     i2u47_41:
  1055  000B82  EFF8  F005         	goto	i2l67
  1056  000B86                     i2u47_40:
  1057  000B86                     
  1058                           ;control.c: 91:         if (!PORTBbits.RB4){
  1059  000B86  B881               	btfsc	129,4,c	;volatile
  1060  000B88  EFC8  F005         	goto	i2u48_41
  1061  000B8C  EFCA  F005         	goto	i2u48_40
  1062  000B90                     i2u48_41:
  1063  000B90  EFD0  F005         	goto	i2l60
  1064  000B94                     i2u48_40:
  1065  000B94                     
  1066                           ;control.c: 92:             USART_Tx("2");
  1067  000B94  0E06               	movlw	STR_8& (0+255)
  1068  000B96  EC3F  F006         	call	i2_USART_Tx
  1069  000B9A                     
  1070                           ;control.c: 93:             LATBbits.LATB2 ^= 1;
  1071  000B9A  748A               	btg	138,2,c	;volatile
  1072                           
  1073                           ;control.c: 94:         }
  1074  000B9C  EFF7  F005         	goto	i2l1268
  1075  000BA0                     i2l60:
  1076  000BA0  BA81               	btfsc	129,5,c	;volatile
  1077  000BA2  EFD5  F005         	goto	i2u49_41
  1078  000BA6  EFD7  F005         	goto	i2u49_40
  1079  000BAA                     i2u49_41:
  1080  000BAA  EFDD  F005         	goto	i2l62
  1081  000BAE                     i2u49_40:
  1082  000BAE                     
  1083                           ;control.c: 96:             USART_Tx("3");
  1084  000BAE  0E08               	movlw	STR_9& (0+255)
  1085  000BB0  EC3F  F006         	call	i2_USART_Tx
  1086  000BB4                     
  1087                           ;control.c: 97:             LATBbits.LATB2 ^= 1;
  1088  000BB4  748A               	btg	138,2,c	;volatile
  1089                           
  1090                           ;control.c: 98:         }
  1091  000BB6  EFF7  F005         	goto	i2l1268
  1092  000BBA                     i2l62:
  1093  000BBA  BC81               	btfsc	129,6,c	;volatile
  1094  000BBC  EFE2  F005         	goto	i2u50_41
  1095  000BC0  EFE4  F005         	goto	i2u50_40
  1096  000BC4                     i2u50_41:
  1097  000BC4  EFEA  F005         	goto	i2l64
  1098  000BC8                     i2u50_40:
  1099  000BC8                     
  1100                           ;control.c: 100:             USART_Tx("4");
  1101  000BC8  0E0A               	movlw	STR_10& (0+255)
  1102  000BCA  EC3F  F006         	call	i2_USART_Tx
  1103  000BCE                     
  1104                           ;control.c: 101:             LATBbits.LATB2 ^= 1;
  1105  000BCE  748A               	btg	138,2,c	;volatile
  1106                           
  1107                           ;control.c: 102:         }
  1108  000BD0  EFF7  F005         	goto	i2l1268
  1109  000BD4                     i2l64:
  1110  000BD4  BE81               	btfsc	129,7,c	;volatile
  1111  000BD6  EFEF  F005         	goto	i2u51_41
  1112  000BDA  EFF1  F005         	goto	i2u51_40
  1113  000BDE                     i2u51_41:
  1114  000BDE  EFF7  F005         	goto	i2l63
  1115  000BE2                     i2u51_40:
  1116  000BE2                     
  1117                           ;control.c: 104:             USART_Tx("5");
  1118  000BE2  0E0C               	movlw	STR_11& (0+255)
  1119  000BE4  EC3F  F006         	call	i2_USART_Tx
  1120  000BE8                     
  1121                           ;control.c: 105:             LATBbits.LATB2 ^= 1;
  1122  000BE8  748A               	btg	138,2,c	;volatile
  1123  000BEA  EFF7  F005         	goto	i2l1268
  1124  000BEE                     i2l63:
  1125  000BEE                     i2l1268:
  1126                           
  1127                           ;control.c: 108:         RBIF = 0;
  1128  000BEE  90F2               	bcf	4082,0,c	;volatile
  1129  000BF0                     i2l67:
  1130  000BF0  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1131  000BF2  0011               	retfie		f
  1132  000BF4                     __end_of_ISR:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function i2_USART_Tx *****************
  1136 ;; Defined at:
  1137 ;;		line 28 in file "LibreriaMicros.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  data            1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  data            1    0[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_ISR
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text6
  1165  000C7E                     __ptext6:
  1166                           	callstack 0
  1167  000C7E                     i2_USART_Tx:
  1168                           	callstack 27
  1169                           
  1170                           ;incstack = 0
  1171                           ;i2USART_Tx@data stored from wreg
  1172  000C7E  6E01               	movwf	i2USART_Tx@data^0,c
  1173  000C80                     
  1174                           ;LibreriaMicros.c: 29:     TXREG = data;
  1175  000C80  C001  FFAD         	movff	i2USART_Tx@data,4013	;volatile
  1176  000C84  0012               	return		;funcret
  1177  000C86                     __end_ofi2_USART_Tx:
  1178                           	callstack 0
  1179                           
  1180                           	psect	rparam
  1181  0000                     
  1182                           	psect	temp
  1183  00001E                     btemp:
  1184                           	callstack 0
  1185  00001E                     	ds	1
  1186  0000                     int$flags	set	btemp
  1187  0000                     wtemp8	set	btemp+1
  1188  0000                     ttemp5	set	btemp+1
  1189  0000                     ttemp6	set	btemp+4
  1190  0000                     ttemp7	set	btemp+8
  1191                           
  1192                           	psect	idloc
  1193                           
  1194                           ;Config register IDLOC0 @ 0x200000
  1195                           ;	unspecified, using default values
  1196  200000                     	org	2097152
  1197  200000  FF                 	db	255
  1198                           
  1199                           ;Config register IDLOC1 @ 0x200001
  1200                           ;	unspecified, using default values
  1201  200001                     	org	2097153
  1202  200001  FF                 	db	255
  1203                           
  1204                           ;Config register IDLOC2 @ 0x200002
  1205                           ;	unspecified, using default values
  1206  200002                     	org	2097154
  1207  200002  FF                 	db	255
  1208                           
  1209                           ;Config register IDLOC3 @ 0x200003
  1210                           ;	unspecified, using default values
  1211  200003                     	org	2097155
  1212  200003  FF                 	db	255
  1213                           
  1214                           ;Config register IDLOC4 @ 0x200004
  1215                           ;	unspecified, using default values
  1216  200004                     	org	2097156
  1217  200004  FF                 	db	255
  1218                           
  1219                           ;Config register IDLOC5 @ 0x200005
  1220                           ;	unspecified, using default values
  1221  200005                     	org	2097157
  1222  200005  FF                 	db	255
  1223                           
  1224                           ;Config register IDLOC6 @ 0x200006
  1225                           ;	unspecified, using default values
  1226  200006                     	org	2097158
  1227  200006  FF                 	db	255
  1228                           
  1229                           ;Config register IDLOC7 @ 0x200007
  1230                           ;	unspecified, using default values
  1231  200007                     	org	2097159
  1232  200007  FF                 	db	255
  1233                           
  1234                           	psect	config
  1235                           
  1236                           ;Config register CONFIG1L @ 0x300000
  1237                           ;	unspecified, using default values
  1238                           ;	PLL Prescaler Selection bits
  1239                           ;	PLLDIV = 0x0, unprogrammed default
  1240                           ;	System Clock Postscaler Selection bits
  1241                           ;	CPUDIV = 0x0, unprogrammed default
  1242                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1243                           ;	USBDIV = 0x0, unprogrammed default
  1244  300000                     	org	3145728
  1245  300000  00                 	db	0
  1246                           
  1247                           ;Config register CONFIG1H @ 0x300001
  1248                           ;	unspecified, using default values
  1249                           ;	Oscillator Selection bits
  1250                           ;	FOSC = 0x5, unprogrammed default
  1251                           ;	Fail-Safe Clock Monitor Enable bit
  1252                           ;	FCMEN = 0x0, unprogrammed default
  1253                           ;	Internal/External Oscillator Switchover bit
  1254                           ;	IESO = 0x0, unprogrammed default
  1255  300001                     	org	3145729
  1256  300001  05                 	db	5
  1257                           
  1258                           ;Config register CONFIG2L @ 0x300002
  1259                           ;	unspecified, using default values
  1260                           ;	Power-up Timer Enable bit
  1261                           ;	PWRT = 0x1, unprogrammed default
  1262                           ;	Brown-out Reset Enable bits
  1263                           ;	BOR = 0x3, unprogrammed default
  1264                           ;	Brown-out Reset Voltage bits
  1265                           ;	BORV = 0x3, unprogrammed default
  1266                           ;	USB Voltage Regulator Enable bit
  1267                           ;	VREGEN = 0x0, unprogrammed default
  1268  300002                     	org	3145730
  1269  300002  1F                 	db	31
  1270                           
  1271                           ;Config register CONFIG2H @ 0x300003
  1272                           ;	unspecified, using default values
  1273                           ;	Watchdog Timer Enable bit
  1274                           ;	WDT = 0x1, unprogrammed default
  1275                           ;	Watchdog Timer Postscale Select bits
  1276                           ;	WDTPS = 0xF, unprogrammed default
  1277  300003                     	org	3145731
  1278  300003  1F                 	db	31
  1279                           
  1280                           ; Padding undefined space
  1281  300004                     	org	3145732
  1282  300004  FF                 	db	255
  1283                           
  1284                           ;Config register CONFIG3H @ 0x300005
  1285                           ;	unspecified, using default values
  1286                           ;	CCP2 MUX bit
  1287                           ;	CCP2MX = 0x1, unprogrammed default
  1288                           ;	PORTB A/D Enable bit
  1289                           ;	PBADEN = 0x1, unprogrammed default
  1290                           ;	Low-Power Timer 1 Oscillator Enable bit
  1291                           ;	LPT1OSC = 0x0, unprogrammed default
  1292                           ;	MCLR Pin Enable bit
  1293                           ;	MCLRE = 0x1, unprogrammed default
  1294  300005                     	org	3145733
  1295  300005  83                 	db	131
  1296                           
  1297                           ;Config register CONFIG4L @ 0x300006
  1298                           ;	unspecified, using default values
  1299                           ;	Stack Full/Underflow Reset Enable bit
  1300                           ;	STVREN = 0x1, unprogrammed default
  1301                           ;	Single-Supply ICSP Enable bit
  1302                           ;	LVP = 0x1, unprogrammed default
  1303                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1304                           ;	ICPRT = 0x0, unprogrammed default
  1305                           ;	Extended Instruction Set Enable bit
  1306                           ;	XINST = 0x0, unprogrammed default
  1307                           ;	Background Debugger Enable bit
  1308                           ;	DEBUG = 0x1, unprogrammed default
  1309  300006                     	org	3145734
  1310  300006  85                 	db	133
  1311                           
  1312                           ; Padding undefined space
  1313  300007                     	org	3145735
  1314  300007  FF                 	db	255
  1315                           
  1316                           ;Config register CONFIG5L @ 0x300008
  1317                           ;	unspecified, using default values
  1318                           ;	Code Protection bit
  1319                           ;	CP0 = 0x1, unprogrammed default
  1320                           ;	Code Protection bit
  1321                           ;	CP1 = 0x1, unprogrammed default
  1322                           ;	Code Protection bit
  1323                           ;	CP2 = 0x1, unprogrammed default
  1324                           ;	Code Protection bit
  1325                           ;	CP3 = 0x1, unprogrammed default
  1326  300008                     	org	3145736
  1327  300008  0F                 	db	15
  1328                           
  1329                           ;Config register CONFIG5H @ 0x300009
  1330                           ;	unspecified, using default values
  1331                           ;	Boot Block Code Protection bit
  1332                           ;	CPB = 0x1, unprogrammed default
  1333                           ;	Data EEPROM Code Protection bit
  1334                           ;	CPD = 0x1, unprogrammed default
  1335  300009                     	org	3145737
  1336  300009  C0                 	db	192
  1337                           
  1338                           ;Config register CONFIG6L @ 0x30000A
  1339                           ;	unspecified, using default values
  1340                           ;	Write Protection bit
  1341                           ;	WRT0 = 0x1, unprogrammed default
  1342                           ;	Write Protection bit
  1343                           ;	WRT1 = 0x1, unprogrammed default
  1344                           ;	Write Protection bit
  1345                           ;	WRT2 = 0x1, unprogrammed default
  1346                           ;	Write Protection bit
  1347                           ;	WRT3 = 0x1, unprogrammed default
  1348  30000A                     	org	3145738
  1349  30000A  0F                 	db	15
  1350                           
  1351                           ;Config register CONFIG6H @ 0x30000B
  1352                           ;	unspecified, using default values
  1353                           ;	Configuration Register Write Protection bit
  1354                           ;	WRTC = 0x1, unprogrammed default
  1355                           ;	Boot Block Write Protection bit
  1356                           ;	WRTB = 0x1, unprogrammed default
  1357                           ;	Data EEPROM Write Protection bit
  1358                           ;	WRTD = 0x1, unprogrammed default
  1359  30000B                     	org	3145739
  1360  30000B  E0                 	db	224
  1361                           
  1362                           ;Config register CONFIG7L @ 0x30000C
  1363                           ;	unspecified, using default values
  1364                           ;	Table Read Protection bit
  1365                           ;	EBTR0 = 0x1, unprogrammed default
  1366                           ;	Table Read Protection bit
  1367                           ;	EBTR1 = 0x1, unprogrammed default
  1368                           ;	Table Read Protection bit
  1369                           ;	EBTR2 = 0x1, unprogrammed default
  1370                           ;	Table Read Protection bit
  1371                           ;	EBTR3 = 0x1, unprogrammed default
  1372  30000C                     	org	3145740
  1373  30000C  0F                 	db	15
  1374                           
  1375                           ;Config register CONFIG7H @ 0x30000D
  1376                           ;	unspecified, using default values
  1377                           ;	Boot Block Table Read Protection bit
  1378                           ;	EBTRB = 0x1, unprogrammed default
  1379  30000D                     	org	3145741
  1380  30000D  40                 	db	64
  1381                           tosu	equ	0xFFF
  1382                           tosh	equ	0xFFE
  1383                           tosl	equ	0xFFD
  1384                           stkptr	equ	0xFFC
  1385                           pclatu	equ	0xFFB
  1386                           pclath	equ	0xFFA
  1387                           pcl	equ	0xFF9
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           prodh	equ	0xFF4
  1393                           prodl	equ	0xFF3
  1394                           indf0	equ	0xFEF
  1395                           postinc0	equ	0xFEE
  1396                           postdec0	equ	0xFED
  1397                           preinc0	equ	0xFEC
  1398                           plusw0	equ	0xFEB
  1399                           fsr0h	equ	0xFEA
  1400                           fsr0l	equ	0xFE9
  1401                           wreg	equ	0xFE8
  1402                           indf1	equ	0xFE7
  1403                           postinc1	equ	0xFE6
  1404                           postdec1	equ	0xFE5
  1405                           preinc1	equ	0xFE4
  1406                           plusw1	equ	0xFE3
  1407                           fsr1h	equ	0xFE2
  1408                           fsr1l	equ	0xFE1
  1409                           bsr	equ	0xFE0
  1410                           indf2	equ	0xFDF
  1411                           postinc2	equ	0xFDE
  1412                           postdec2	equ	0xFDD
  1413                           preinc2	equ	0xFDC
  1414                           plusw2	equ	0xFDB
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in COMRAM

    _ISR->i2_USART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1374
                                             23 COMRAM     6     6      0
                         _USART_Init
                           _USART_Tx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             15 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0      22
                         i2_USART_Tx
 ---------------------------------------------------------------------------------
 (4) i2_USART_Tx                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___aldiv
   _USART_Tx
   ___awdiv

 _ISR (ROOT)
   i2_USART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1D      1D       1       30.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 27 19:40:36 2020

                     l40 0886                       l38 0878                       l96 0C62  
                     l99 0C7C             ___awdiv@sign 0007                      l190 0A80  
                    l342 0B44                      l846 0C78                      u300 0A06  
                    u301 0A02                      u310 0A2E                      u311 0A2A  
                    u320 0A60                      u400 08C8                      u321 0A5C  
                    u401 08C4                      u330 0A94                      u410 08E4  
                    u331 0A90                      u411 08E0                      u340 0AAE  
                    u420 090C                      u341 0AAA                      u421 0908  
                    u270 0988                      u350 0AD4                      u430 0934  
                    u271 0984                      u351 0AD0                      u431 0930  
                    u280 09AA                      u360 0AF2                      u440 095C  
                    u281 09A6                      u361 0AEE                      u441 0958  
                    u290 09E4                      u370 0B0E                      u291 09E0  
                    u371 0B0A                      u380 0B34                      _ISR 0008  
                    u381 0B30                      u390 0886                      u391 0882  
                   ?_ISR 0001                     l1100 0A82                     l1110 0AAE  
                   l1102 0A86                     l1040 097A                     l1120 0ADC  
                   l1112 0AB6                     l1104 0A94                     l1200 0876  
                   l1050 09BA                     l1042 0988                     l1130 0B16  
                   l1122 0AE4                     l1114 0ABA                     l1106 0A9C  
                   l1210 08EA                     l1202 0894                     l1060 09F8  
                   l1052 09BE                     l1044 0998                     l1140 0B3C  
                   l1132 0B18                     l1124 0AF2                     l1116 0AC2  
                   l1108 0AA0                     l1220 0934                     l1212 08F0  
                   l1204 08B0                     l1070 0A40                     l1062 0A06  
                   l1054 09CE                     l1046 099C                     l1038 0976  
                   l1134 0B1E                     l1126 0AF8                     l1118 0AD4  
                   l1230 0968                     l1222 093A                     l1214 090C  
                   l1206 08C8                     l1150 082C                     l1072 0A4A  
                   l1064 0A10                     l1056 09E4                     l1048 09AA  
                   l1128 0B0E                     l1136 0B24                     l1224 0940  
                   l1216 0912                     l1208 08E4                     l1160 083A  
                   l1152 0834                     l1066 0A2E                     l1058 09EC  
                   l1074 0A50                     l1090 0C58                     l1082 0BF4  
                   l1138 0B34                     l1226 095C                     l1218 0918  
                   l1170 0844                     l1162 083C                     l1154 0834  
                   l1146 0818                     l1076 0A60                     l1068 0A3E  
                   l1092 0C5A                     l1084 0BF8                     l1228 0962  
                   l1180 0858                     l1172 0846                     l1164 083E  
                   l1156 0836                     l1148 082C                     l1078 0A70  
                   l1094 0C5C                     l1086 0C54                     l1190 0868  
                   l1182 0860                     l1174 084A                     l1166 0840  
                   l1158 0838                     l1096 0C5E                     l1088 0C56  
                   l1192 086A                     l1184 0862                     l1176 084E  
                   l1168 0842                     l1098 0C60                     l1194 086C  
                   l1186 0864                     l1178 0850                     l1196 086E  
                   l1188 0866                     l1198 0870                     STR_1 080E  
                   STR_2 0810                     STR_3 0812                     STR_4 0814  
                   STR_5 0801                     STR_6 0802                     STR_7 0804  
                   STR_8 0806                     STR_9 0808                     _RBIF 007F90  
                   _RCIF 007CF5                     i2l60 0BA0                     i2l62 0BBA  
            main@lectura 001C                     i2l63 0BEE                     i2l64 0BD4  
                   i2l67 0BF0                     i2l99 0C84                     _main 0818  
                   btemp 001E                     start 000E             ___param_bank 000000  
                  ??_ISR 0002              ?i2_USART_Tx 0001          __end_of___aldiv 0A82  
                  ?_main 0001          __end_of___awdiv 0B46                    STR_10 080A  
                  STR_11 080C          ___awdiv@divisor 0004                    _INT0F 007F91  
                  _INT1F 007F80          ___awdiv@counter 0006                    _RCREG 000FAE  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _SPBRG 000FAF  
                  _TXREG 000FAD         __end_of_USART_Tx 0C7E             USART_Tx@data 0002  
                  ttemp5 001F                    ttemp6 0022                    ttemp7 0026  
                  status 000FD8                    wtemp8 001F              ?_USART_Init 0010  
        __initialization 0C64             __end_of_main 0976                   ??_main 0018  
          __activetblptr 000001                   _ADCON1 000FC1                   _ADRESH 000FC4  
       ___awdiv@dividend 0002                   i2l1144 0C80                   i2l1240 0B60  
                 i2l1232 0B48                   i2l1250 0B86                   i2l1242 0B6E  
                 i2l1234 0B56                   i2l1260 0BC8                   i2l1252 0B94  
                 i2l1244 0B74                   i2l1236 0B5C                   i2l1262 0BCE  
                 i2l1254 0B9A                   i2l1246 0B76                   i2l1238 0B5E  
                 i2l1264 0BE2                   i2l1256 0BAE                   i2l1248 0B78  
                 i2l1266 0BE8                   i2l1258 0BB4                   i2l1268 0BEE  
                 _TMR1IF 007CF0      __size_ofi2_USART_Tx 0008                ??___aldiv 000A  
              ??___awdiv 0006         ___awdiv@quotient 0008             __mediumconst 0000  
                 tblptrh 000FF7                   tblptru 000FF8      __size_of_USART_Init 0070  
             __accesstop 0060  __end_of__initialization 0C64            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_USART_Tx 0001           i2USART_Tx@data 0001  
           ??i2_USART_Tx 0001               ??_USART_Tx 0002                  _INTEDG0 007F8E  
                _INTEDG1 007F8D                  i2u50_40 0BC8                  i2u50_41 0BC4  
                i2u51_40 0BE2                  i2u51_41 0BDE                  i2u45_40 0B56  
                i2u45_41 0B52                  i2u46_40 0B6E                  i2u46_41 0B6A  
                i2u47_40 0B86                  i2u47_41 0B82                  i2u48_40 0B94  
                i2u48_41 0B90                  i2u49_40 0BAE                  i2u49_41 0BAA  
     __end_ofi2_USART_Tx 0C86             ??_USART_Init 0014                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 0976                  ___awdiv 0A82  
           __psmallconst 0800                  __pcinit 0C64                  __ramtop 0800  
                __ptext0 0818                  __ptext1 0A82                  __ptext2 0C76  
                __ptext3 0BF4                  __ptext4 0976                  __ptext6 0C7E  
         USART_Init@baud 0010             __size_of_ISR 0BEC                _T1CONbits 000FCD  
       ___aldiv@dividend 0002       __end_of_USART_Init 0C64           __pintcode_body 0B46  
   end_of_initialization 0C64                  int_func 0B46                _RCSTAbits 000FAB  
       ___aldiv@quotient 000C                _PORTBbits 000F81                _TRISBbits 000F93  
              _TRISCbits 000F94                _TXSTAbits 000FAC        __size_of_USART_Tx 0008  
    start_initialization 0C64              __end_of_ISR 0BF4                __pintcode 0008  
               ?___aldiv 0002                 ?___awdiv 0002              __smallconst 0800  
        ___aldiv@divisor 0006          ___aldiv@counter 000A                 _LATBbits 000F8A  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _USART_Tx 0C76  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
       __size_of___aldiv 010C         __size_of___awdiv 00C4            __size_of_main 015E  
        _USART_Init$1372 0014                 int$flags 001E               _INTCONbits 000FF2  
               intlevel2 0000          main@umbralNuevo 001A          main@umbralViejo 0018  
             i2_USART_Tx 0C7E             ___aldiv@sign 000B               _USART_Init 0BF4  
