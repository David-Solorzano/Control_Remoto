

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 27 20:25:57 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _IPR1bits	set	3999
    56  0000                     _PIE1bits	set	3997
    57  0000                     _T1CONbits	set	4045
    58  0000                     _TMR1L	set	4046
    59  0000                     _TMR1H	set	4047
    60  0000                     _RCREG	set	4014
    61  0000                     _TXREG	set	4013
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _SPBRG	set	4015
    65  0000                     _TRISCbits	set	3988
    66  0000                     _PORTBbits	set	3969
    67  0000                     _ADRESH	set	4036
    68  0000                     _TRISBbits	set	3987
    69  0000                     _ADCON2bits	set	4032
    70  0000                     _ADCON0bits	set	4034
    71  0000                     _ADCON1	set	4033
    72  0000                     _INTCON3bits	set	4080
    73  0000                     _INTCONbits	set	4082
    74  0000                     _TMR1IF	set	31984
    75  0000                     _RCIF	set	31989
    76  0000                     _RBIF	set	32656
    77  0000                     _INT1F	set	32640
    78  0000                     _INT0F	set	32657
    79  0000                     _INTEDG1	set	32653
    80  0000                     _INTEDG0	set	32654
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85  000448                     __pcinit:
    86                           	callstack 0
    87  000448                     start_initialization:
    88                           	callstack 0
    89  000448                     __initialization:
    90                           	callstack 0
    91  000448                     end_of_initialization:
    92                           	callstack 0
    93  000448                     __end_of__initialization:
    94                           	callstack 0
    95  000448  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  00044A  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  00044C  0100               	movlb	0
    98  00044E  EF09  F000         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103  000001                     i2USART_Tx@data:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     ?___awdiv:
   109                           	callstack 0
   110  000002                     ?___aldiv:
   111                           	callstack 0
   112  000002                     USART_Tx@data:
   113                           	callstack 0
   114  000002                     ___awdiv@dividend:
   115                           	callstack 0
   116  000002                     ___aldiv@dividend:
   117                           	callstack 0
   118                           
   119                           ; 4 bytes @ 0x1
   120  000002                     	ds	2
   121  000004                     ___awdiv@divisor:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0x3
   125  000004                     	ds	2
   126  000006                     ___awdiv@counter:
   127                           	callstack 0
   128  000006                     ___aldiv@divisor:
   129                           	callstack 0
   130                           
   131                           ; 4 bytes @ 0x5
   132  000006                     	ds	1
   133  000007                     ___awdiv@sign:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x6
   137  000007                     	ds	1
   138  000008                     ___awdiv@quotient:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x7
   142  000008                     	ds	2
   143  00000A                     ___aldiv@counter:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x9
   147  00000A                     	ds	1
   148  00000B                     ___aldiv@sign:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0xA
   152  00000B                     	ds	1
   153  00000C                     ___aldiv@quotient:
   154                           	callstack 0
   155                           
   156                           ; 4 bytes @ 0xB
   157  00000C                     	ds	4
   158  000010                     USART_Init@baud:
   159                           	callstack 0
   160                           
   161                           ; 4 bytes @ 0xF
   162  000010                     	ds	4
   163  000014                     _USART_Init$1313:
   164                           	callstack 0
   165                           
   166                           ; 4 bytes @ 0x13
   167  000014                     	ds	4
   168  000018                     main@umbralViejo:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x17
   172  000018                     	ds	2
   173  00001A                     main@umbralNuevo:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x19
   177  00001A                     	ds	2
   178  00001C                     main@lectura:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x1B
   182  00001C                     	ds	2
   183                           
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 16 in file "control.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  lectura         2   27[COMRAM] int 
   194 ;;  umbralNuevo     2   25[COMRAM] int 
   195 ;;  umbralViejo     2   23[COMRAM] int 
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   205 ;;      Params:         0       0       0       0       0       0       0       0       0
   206 ;;      Locals:         6       0       0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0       0       0
   208 ;;      Totals:         6       0       0       0       0       0       0       0       0
   209 ;;Total ram usage:        6 bytes
   210 ;; Hardware stack levels required when called:    4
   211 ;; This function calls:
   212 ;;		_USART_Init
   213 ;;		_USART_Tx
   214 ;;		___awdiv
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text0
   221  000012                     __ptext0:
   222                           	callstack 0
   223  000012                     _main:
   224                           	callstack 27
   225  000012                     
   226                           ;control.c: 17:     USART_Init(9600);
   227  000012  0E80               	movlw	128
   228  000014  6E10               	movwf	USART_Init@baud^0,c
   229  000016  0E25               	movlw	37
   230  000018  6E11               	movwf	(USART_Init@baud+1)^0,c
   231  00001A  0E00               	movlw	0
   232  00001C  6E12               	movwf	(USART_Init@baud+2)^0,c
   233  00001E  0E00               	movlw	0
   234  000020  6E13               	movwf	(USART_Init@baud+3)^0,c
   235  000022  ECEC  F001         	call	_USART_Init	;wreg free
   236  000026                     
   237                           ;control.c: 20:     int umbralNuevo = 0;
   238  000026  0E00               	movlw	0
   239  000028  6E1B               	movwf	(main@umbralNuevo+1)^0,c
   240  00002A  0E00               	movlw	0
   241  00002C  6E1A               	movwf	main@umbralNuevo^0,c
   242  00002E                     
   243                           ;control.c: 22:     INTCONbits.GIE = 1;
   244  00002E  8EF2               	bsf	242,7,c	;volatile
   245  000030                     
   246                           ;control.c: 23:     INTCONbits.RBIF = 0;
   247  000030  90F2               	bcf	242,0,c	;volatile
   248  000032                     
   249                           ;control.c: 24:     INTCONbits.RBIE = 1;
   250  000032  86F2               	bsf	242,3,c	;volatile
   251  000034                     
   252                           ;control.c: 25:     INTCONbits.INT0F = 0;
   253  000034  92F2               	bcf	242,1,c	;volatile
   254  000036                     
   255                           ;control.c: 26:     INTCONbits.INT0E = 1;
   256  000036  88F2               	bsf	242,4,c	;volatile
   257  000038                     
   258                           ;control.c: 27:     INTCON3bits.INT1F = 0;
   259  000038  90F0               	bcf	240,0,c	;volatile
   260  00003A                     
   261                           ;control.c: 28:     INTCON3bits.INT1E = 1;
   262  00003A  86F0               	bsf	240,3,c	;volatile
   263  00003C                     
   264                           ;control.c: 29:     INTEDG0 = 0;
   265  00003C  9CF1               	bcf	4081,6,c	;volatile
   266  00003E                     
   267                           ;control.c: 30:     INTEDG1 = 1;
   268  00003E  8AF1               	bsf	4081,5,c	;volatile
   269  000040                     
   270                           ;control.c: 34:     ADCON1 = 0b1110;
   271  000040  0E0E               	movlw	14
   272  000042  6EC1               	movwf	193,c	;volatile
   273  000044                     
   274                           ;control.c: 35:     ADCON0bits.CHS = 0;
   275  000044  0EC3               	movlw	-61
   276  000046  16C2               	andwf	194,f,c	;volatile
   277  000048                     
   278                           ;control.c: 36:     ADCON2bits.ADFM = 0;
   279  000048  9EC0               	bcf	192,7,c	;volatile
   280  00004A                     
   281                           ;control.c: 37:     ADCON2bits.ADCS = 0b001;
   282  00004A  50C0               	movf	192,w,c	;volatile
   283  00004C  0BF8               	andlw	-8
   284  00004E  0901               	iorlw	1
   285  000050  6EC0               	movwf	192,c	;volatile
   286  000052                     
   287                           ;control.c: 38:     ADCON2bits.ACQT = 0b010;
   288  000052  50C0               	movf	192,w,c	;volatile
   289  000054  0BC7               	andlw	-57
   290  000056  0910               	iorlw	16
   291  000058  6EC0               	movwf	192,c	;volatile
   292  00005A                     
   293                           ;control.c: 39:     ADCON0bits.ADON = 1;
   294  00005A  80C2               	bsf	194,0,c	;volatile
   295  00005C                     
   296                           ;control.c: 41:     TRISBbits.RB0 = 1;
   297  00005C  8093               	bsf	147,0,c	;volatile
   298  00005E                     
   299                           ;control.c: 42:     TRISBbits.RB1 = 1;
   300  00005E  8293               	bsf	147,1,c	;volatile
   301  000060                     
   302                           ;control.c: 43:     TRISBbits.RB4 = 1;
   303  000060  8893               	bsf	147,4,c	;volatile
   304  000062                     
   305                           ;control.c: 44:     TRISBbits.RB5 = 1;
   306  000062  8A93               	bsf	147,5,c	;volatile
   307  000064                     
   308                           ;control.c: 45:     TRISBbits.RB6 = 1;
   309  000064  8C93               	bsf	147,6,c	;volatile
   310  000066                     
   311                           ;control.c: 46:     TRISBbits.RB7 = 1;
   312  000066  8E93               	bsf	147,7,c	;volatile
   313  000068                     
   314                           ;control.c: 48:     USART_Tx(6);
   315  000068  0E06               	movlw	6
   316  00006A  EC29  F002         	call	_USART_Tx
   317  00006E                     l1174:
   318                           
   319                           ;control.c: 51:         ADCON0bits.GO_DONE = 1;
   320  00006E  82C2               	bsf	194,1,c	;volatile
   321  000070                     l36:
   322  000070  B2C2               	btfsc	194,1,c	;volatile
   323  000072  EF3D  F000         	goto	u391
   324  000076  EF3F  F000         	goto	u390
   325  00007A                     u391:
   326  00007A  EF38  F000         	goto	l36
   327  00007E                     u390:
   328  00007E                     
   329                           ;control.c: 53:         umbralViejo = umbralNuevo;
   330  00007E  C01A  F018         	movff	main@umbralNuevo,main@umbralViejo
   331  000082  C01B  F019         	movff	main@umbralNuevo+1,main@umbralViejo+1
   332                           
   333                           ;control.c: 54:         lectura = ADRESH;
   334  000086  CFC4 F01C          	movff	4036,main@lectura	;volatile
   335  00008A  6A1D               	clrf	(main@lectura+1)^0,c
   336  00008C                     
   337                           ;control.c: 55:         umbralNuevo = lectura / 51;
   338  00008C  C01C  F002         	movff	main@lectura,___awdiv@dividend
   339  000090  C01D  F003         	movff	main@lectura+1,___awdiv@dividend+1
   340  000094  0E00               	movlw	0
   341  000096  6E05               	movwf	(___awdiv@divisor+1)^0,c
   342  000098  0E33               	movlw	51
   343  00009A  6E04               	movwf	___awdiv@divisor^0,c
   344  00009C  EC39  F001         	call	___awdiv	;wreg free
   345  0000A0  C002  F01A         	movff	?___awdiv,main@umbralNuevo
   346  0000A4  C003  F01B         	movff	?___awdiv+1,main@umbralNuevo+1
   347  0000A8                     
   348                           ;control.c: 56:         if (umbralNuevo != umbralViejo){
   349  0000A8  5018               	movf	main@umbralViejo^0,w,c
   350  0000AA  181A               	xorwf	main@umbralNuevo^0,w,c
   351  0000AC  E109               	bnz	u400
   352  0000AE  5019               	movf	(main@umbralViejo+1)^0,w,c
   353  0000B0  181B               	xorwf	(main@umbralNuevo+1)^0,w,c
   354  0000B2  B4D8               	btfsc	status,2,c
   355  0000B4  EF5E  F000         	goto	u401
   356  0000B8  EF60  F000         	goto	u400
   357  0000BC                     u401:
   358  0000BC  EF37  F000         	goto	l1174
   359  0000C0                     u400:
   360  0000C0                     
   361                           ;control.c: 57:             if (lectura < 51){
   362  0000C0  BE1D               	btfsc	(main@lectura+1)^0,7,c
   363  0000C2  EF6E  F000         	goto	u410
   364  0000C6  501D               	movf	(main@lectura+1)^0,w,c
   365  0000C8  E107               	bnz	u411
   366  0000CA  0E33               	movlw	51
   367  0000CC  5C1C               	subwf	main@lectura^0,w,c
   368  0000CE  B0D8               	btfsc	status,0,c
   369  0000D0  EF6C  F000         	goto	u411
   370  0000D4  EF6E  F000         	goto	u410
   371  0000D8                     u411:
   372  0000D8  EF73  F000         	goto	l1184
   373  0000DC                     u410:
   374  0000DC                     
   375                           ;control.c: 58:                 USART_Tx(6);
   376  0000DC  0E06               	movlw	6
   377  0000DE  EC29  F002         	call	_USART_Tx
   378                           
   379                           ;control.c: 59:             }
   380  0000E2  EF37  F000         	goto	l1174
   381  0000E6                     l1184:
   382  0000E6  BE1D               	btfsc	(main@lectura+1)^0,7,c
   383  0000E8  EF81  F000         	goto	u420
   384  0000EC  501D               	movf	(main@lectura+1)^0,w,c
   385  0000EE  E107               	bnz	u421
   386  0000F0  0E66               	movlw	102
   387  0000F2  5C1C               	subwf	main@lectura^0,w,c
   388  0000F4  B0D8               	btfsc	status,0,c
   389  0000F6  EF7F  F000         	goto	u421
   390  0000FA  EF81  F000         	goto	u420
   391  0000FE                     u421:
   392  0000FE  EF86  F000         	goto	l1188
   393  000102                     u420:
   394  000102                     
   395                           ;control.c: 61:                 USART_Tx(7);
   396  000102  0E07               	movlw	7
   397  000104  EC29  F002         	call	_USART_Tx
   398                           
   399                           ;control.c: 62:             }
   400  000108  EF37  F000         	goto	l1174
   401  00010C                     l1188:
   402  00010C  BE1D               	btfsc	(main@lectura+1)^0,7,c
   403  00010E  EF94  F000         	goto	u430
   404  000112  501D               	movf	(main@lectura+1)^0,w,c
   405  000114  E107               	bnz	u431
   406  000116  0E9A               	movlw	154
   407  000118  5C1C               	subwf	main@lectura^0,w,c
   408  00011A  B0D8               	btfsc	status,0,c
   409  00011C  EF92  F000         	goto	u431
   410  000120  EF94  F000         	goto	u430
   411  000124                     u431:
   412  000124  EF99  F000         	goto	l1192
   413  000128                     u430:
   414  000128                     
   415                           ;control.c: 64:                 USART_Tx(8);
   416  000128  0E08               	movlw	8
   417  00012A  EC29  F002         	call	_USART_Tx
   418                           
   419                           ;control.c: 65:             }
   420  00012E  EF37  F000         	goto	l1174
   421  000132                     l1192:
   422  000132  BE1D               	btfsc	(main@lectura+1)^0,7,c
   423  000134  EFA7  F000         	goto	u440
   424  000138  501D               	movf	(main@lectura+1)^0,w,c
   425  00013A  E107               	bnz	u441
   426  00013C  0ECD               	movlw	205
   427  00013E  5C1C               	subwf	main@lectura^0,w,c
   428  000140  B0D8               	btfsc	status,0,c
   429  000142  EFA5  F000         	goto	u441
   430  000146  EFA7  F000         	goto	u440
   431  00014A                     u441:
   432  00014A  EFAC  F000         	goto	l1196
   433  00014E                     u440:
   434  00014E                     
   435                           ;control.c: 67:                 USART_Tx(9);
   436  00014E  0E09               	movlw	9
   437  000150  EC29  F002         	call	_USART_Tx
   438                           
   439                           ;control.c: 68:             }
   440  000154  EF37  F000         	goto	l1174
   441  000158                     l1196:
   442                           
   443                           ;control.c: 70:                 USART_Tx(10);
   444  000158  0E0A               	movlw	10
   445  00015A  EC29  F002         	call	_USART_Tx
   446  00015E  EF37  F000         	goto	l1174
   447  000162  EF07  F000         	goto	start
   448  000166                     __end_of_main:
   449                           	callstack 0
   450                           
   451 ;; *************** function ___awdiv *****************
   452 ;; Defined at:
   453 ;;		line 7 in file "D:\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  dividend        2    1[COMRAM] int 
   456 ;;  divisor         2    3[COMRAM] int 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  quotient        2    7[COMRAM] int 
   459 ;;  sign            1    6[COMRAM] unsigned char 
   460 ;;  counter         1    5[COMRAM] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  2    1[COMRAM] int 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         4       0       0       0       0       0       0       0       0
   471 ;;      Locals:         4       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         8       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        8 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    2
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text1
   485  000272                     __ptext1:
   486                           	callstack 0
   487  000272                     ___awdiv:
   488                           	callstack 28
   489  000272  0E00               	movlw	0
   490  000274  6E07               	movwf	___awdiv@sign^0,c
   491  000276  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
   492  000278  EF42  F001         	goto	u330
   493  00027C  EF40  F001         	goto	u331
   494  000280                     u331:
   495  000280  EF48  F001         	goto	l1084
   496  000284                     u330:
   497  000284  6C04               	negf	___awdiv@divisor^0,c
   498  000286  1E05               	comf	(___awdiv@divisor+1)^0,f,c
   499  000288  B0D8               	btfsc	status,0,c
   500  00028A  2A05               	incf	(___awdiv@divisor+1)^0,f,c
   501  00028C  0E01               	movlw	1
   502  00028E  6E07               	movwf	___awdiv@sign^0,c
   503  000290                     l1084:
   504  000290  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
   505  000292  EF4F  F001         	goto	u340
   506  000296  EF4D  F001         	goto	u341
   507  00029A                     u341:
   508  00029A  EF55  F001         	goto	l1090
   509  00029E                     u340:
   510  00029E  6C02               	negf	___awdiv@dividend^0,c
   511  0002A0  1E03               	comf	(___awdiv@dividend+1)^0,f,c
   512  0002A2  B0D8               	btfsc	status,0,c
   513  0002A4  2A03               	incf	(___awdiv@dividend+1)^0,f,c
   514  0002A6  0E01               	movlw	1
   515  0002A8  1A07               	xorwf	___awdiv@sign^0,f,c
   516  0002AA                     l1090:
   517  0002AA  0E00               	movlw	0
   518  0002AC  6E09               	movwf	(___awdiv@quotient+1)^0,c
   519  0002AE  0E00               	movlw	0
   520  0002B0  6E08               	movwf	___awdiv@quotient^0,c
   521  0002B2  5004               	movf	___awdiv@divisor^0,w,c
   522  0002B4  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
   523  0002B6  B4D8               	btfsc	status,2,c
   524  0002B8  EF60  F001         	goto	u351
   525  0002BC  EF62  F001         	goto	u350
   526  0002C0                     u351:
   527  0002C0  EF8A  F001         	goto	l1112
   528  0002C4                     u350:
   529  0002C4  0E01               	movlw	1
   530  0002C6  6E06               	movwf	___awdiv@counter^0,c
   531  0002C8  EF6A  F001         	goto	l1098
   532  0002CC                     l1096:
   533  0002CC  90D8               	bcf	status,0,c
   534  0002CE  3604               	rlcf	___awdiv@divisor^0,f,c
   535  0002D0  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
   536  0002D2  2A06               	incf	___awdiv@counter^0,f,c
   537  0002D4                     l1098:
   538  0002D4  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
   539  0002D6  EF6F  F001         	goto	u361
   540  0002DA  EF71  F001         	goto	u360
   541  0002DE                     u361:
   542  0002DE  EF66  F001         	goto	l1096
   543  0002E2                     u360:
   544  0002E2                     l1100:
   545  0002E2  90D8               	bcf	status,0,c
   546  0002E4  3608               	rlcf	___awdiv@quotient^0,f,c
   547  0002E6  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
   548  0002E8  5004               	movf	___awdiv@divisor^0,w,c
   549  0002EA  5C02               	subwf	___awdiv@dividend^0,w,c
   550  0002EC  5005               	movf	(___awdiv@divisor+1)^0,w,c
   551  0002EE  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
   552  0002F0  A0D8               	btfss	status,0,c
   553  0002F2  EF7D  F001         	goto	u371
   554  0002F6  EF7F  F001         	goto	u370
   555  0002FA                     u371:
   556  0002FA  EF84  F001         	goto	l1108
   557  0002FE                     u370:
   558  0002FE  5004               	movf	___awdiv@divisor^0,w,c
   559  000300  5E02               	subwf	___awdiv@dividend^0,f,c
   560  000302  5005               	movf	(___awdiv@divisor+1)^0,w,c
   561  000304  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
   562  000306  8008               	bsf	___awdiv@quotient^0,0,c
   563  000308                     l1108:
   564  000308  90D8               	bcf	status,0,c
   565  00030A  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
   566  00030C  3204               	rrcf	___awdiv@divisor^0,f,c
   567  00030E  2E06               	decfsz	___awdiv@counter^0,f,c
   568  000310  EF71  F001         	goto	l1100
   569  000314                     l1112:
   570  000314  5007               	movf	___awdiv@sign^0,w,c
   571  000316  B4D8               	btfsc	status,2,c
   572  000318  EF90  F001         	goto	u381
   573  00031C  EF92  F001         	goto	u380
   574  000320                     u381:
   575  000320  EF96  F001         	goto	l1116
   576  000324                     u380:
   577  000324  6C08               	negf	___awdiv@quotient^0,c
   578  000326  1E09               	comf	(___awdiv@quotient+1)^0,f,c
   579  000328  B0D8               	btfsc	status,0,c
   580  00032A  2A09               	incf	(___awdiv@quotient+1)^0,f,c
   581  00032C                     l1116:
   582  00032C  C008  F002         	movff	___awdiv@quotient,?___awdiv
   583  000330  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
   584  000334  0012               	return		;funcret
   585  000336                     __end_of___awdiv:
   586                           	callstack 0
   587                           
   588 ;; *************** function _USART_Tx *****************
   589 ;; Defined at:
   590 ;;		line 28 in file "LibreriaMicros.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  data            1    wreg     unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  data            1    1[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         0       0       0       0       0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    2
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text2
   619  000452                     __ptext2:
   620                           	callstack 0
   621  000452                     _USART_Tx:
   622                           	callstack 28
   623                           
   624                           ;incstack = 0
   625                           ;USART_Tx@data stored from wreg
   626  000452  6E02               	movwf	USART_Tx@data^0,c
   627  000454                     
   628                           ;LibreriaMicros.c: 29:     TXREG = data;
   629  000454  C002  FFAD         	movff	USART_Tx@data,4013	;volatile
   630  000458  0012               	return		;funcret
   631  00045A                     __end_of_USART_Tx:
   632                           	callstack 0
   633                           
   634 ;; *************** function _USART_Init *****************
   635 ;; Defined at:
   636 ;;		line 6 in file "LibreriaMicros.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  baud            4   15[COMRAM] long 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         4       0       0       0       0       0       0       0       0
   651 ;;      Locals:         4       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         8       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        8 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    3
   657 ;; This function calls:
   658 ;;		___aldiv
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text3
   665  0003D8                     __ptext3:
   666                           	callstack 0
   667  0003D8                     _USART_Init:
   668                           	callstack 27
   669  0003D8                     
   670                           ;LibreriaMicros.c: 8:     TRISCbits.RC6 = 0;
   671  0003D8  9C94               	bcf	148,6,c	;volatile
   672                           
   673                           ;LibreriaMicros.c: 9:     TRISCbits.RC7 = 1;
   674  0003DA  8E94               	bsf	148,7,c	;volatile
   675  0003DC                     
   676                           ;LibreriaMicros.c: 12:     SPBRG = (unsigned char)((8000000L/baud)/64)-1;
   677  0003DC  C010  F006         	movff	USART_Init@baud,___aldiv@divisor
   678  0003E0  C011  F007         	movff	USART_Init@baud+1,___aldiv@divisor+1
   679  0003E4  C012  F008         	movff	USART_Init@baud+2,___aldiv@divisor+2
   680  0003E8  C013  F009         	movff	USART_Init@baud+3,___aldiv@divisor+3
   681  0003EC  0E00               	movlw	0
   682  0003EE  6E02               	movwf	___aldiv@dividend^0,c
   683  0003F0  0E12               	movlw	18
   684  0003F2  6E03               	movwf	(___aldiv@dividend+1)^0,c
   685  0003F4  0E7A               	movlw	122
   686  0003F6  6E04               	movwf	(___aldiv@dividend+2)^0,c
   687  0003F8  0E00               	movlw	0
   688  0003FA  6E05               	movwf	(___aldiv@dividend+3)^0,c
   689  0003FC  ECB3  F000         	call	___aldiv	;wreg free
   690  000400  C002  F014         	movff	?___aldiv,_USART_Init$1313
   691  000404  C003  F015         	movff	?___aldiv+1,_USART_Init$1313+1
   692  000408  C004  F016         	movff	?___aldiv+2,_USART_Init$1313+2
   693  00040C  C005  F017         	movff	?___aldiv+3,_USART_Init$1313+3
   694                           
   695                           ;LibreriaMicros.c: 12:     SPBRG = (unsigned char)((8000000L/baud)/64)-1;
   696  000410  C014  F002         	movff	_USART_Init$1313,___aldiv@dividend
   697  000414  C015  F003         	movff	_USART_Init$1313+1,___aldiv@dividend+1
   698  000418  C016  F004         	movff	_USART_Init$1313+2,___aldiv@dividend+2
   699  00041C  C017  F005         	movff	_USART_Init$1313+3,___aldiv@dividend+3
   700  000420  0E40               	movlw	64
   701  000422  6E06               	movwf	___aldiv@divisor^0,c
   702  000424  0E00               	movlw	0
   703  000426  6E07               	movwf	(___aldiv@divisor+1)^0,c
   704  000428  0E00               	movlw	0
   705  00042A  6E08               	movwf	(___aldiv@divisor+2)^0,c
   706  00042C  0E00               	movlw	0
   707  00042E  6E09               	movwf	(___aldiv@divisor+3)^0,c
   708  000430  ECB3  F000         	call	___aldiv	;wreg free
   709  000434  0402               	decf	?___aldiv^0,w,c
   710  000436  6EAF               	movwf	175,c	;volatile
   711  000438                     
   712                           ;LibreriaMicros.c: 15:     TXSTAbits.BRGH = 0;
   713  000438  94AC               	bcf	172,2,c	;volatile
   714  00043A                     
   715                           ;LibreriaMicros.c: 16:     TXSTAbits.SYNC = 0;
   716  00043A  98AC               	bcf	172,4,c	;volatile
   717  00043C                     
   718                           ;LibreriaMicros.c: 17:     RCSTAbits.SPEN = 1;
   719  00043C  8EAB               	bsf	171,7,c	;volatile
   720  00043E                     
   721                           ;LibreriaMicros.c: 20:     TXSTAbits.TX9 = 0;
   722  00043E  9CAC               	bcf	172,6,c	;volatile
   723  000440                     
   724                           ;LibreriaMicros.c: 21:     TXSTAbits.TXEN = 1;
   725  000440  8AAC               	bsf	172,5,c	;volatile
   726  000442                     
   727                           ;LibreriaMicros.c: 24:     RCSTAbits.RC9 = 0;
   728  000442  9CAB               	bcf	171,6,c	;volatile
   729  000444                     
   730                           ;LibreriaMicros.c: 25:     RCSTAbits.CREN = 1;
   731  000444  88AB               	bsf	171,4,c	;volatile
   732  000446  0012               	return		;funcret
   733  000448                     __end_of_USART_Init:
   734                           	callstack 0
   735                           
   736 ;; *************** function ___aldiv *****************
   737 ;; Defined at:
   738 ;;		line 7 in file "D:\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  dividend        4    1[COMRAM] long 
   741 ;;  divisor         4    5[COMRAM] long 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  quotient        4   11[COMRAM] long 
   744 ;;  sign            1   10[COMRAM] unsigned char 
   745 ;;  counter         1    9[COMRAM] unsigned char 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  4    1[COMRAM] long 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         8       0       0       0       0       0       0       0       0
   756 ;;      Locals:         6       0       0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0
   758 ;;      Totals:        14       0       0       0       0       0       0       0       0
   759 ;;Total ram usage:       14 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    2
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_USART_Init
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text4
   770  000166                     __ptext4:
   771                           	callstack 0
   772  000166                     ___aldiv:
   773                           	callstack 27
   774  000166  0E00               	movlw	0
   775  000168  6E0B               	movwf	___aldiv@sign^0,c
   776  00016A  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
   777  00016C  EFBC  F000         	goto	u270
   778  000170  EFBA  F000         	goto	u271
   779  000174                     u271:
   780  000174  EFC6  F000         	goto	l1022
   781  000178                     u270:
   782  000178  1E09               	comf	(___aldiv@divisor+3)^0,f,c
   783  00017A  1E08               	comf	(___aldiv@divisor+2)^0,f,c
   784  00017C  1E07               	comf	(___aldiv@divisor+1)^0,f,c
   785  00017E  6C06               	negf	___aldiv@divisor^0,c
   786  000180  0E00               	movlw	0
   787  000182  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
   788  000184  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
   789  000186  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
   790  000188  0E01               	movlw	1
   791  00018A  6E0B               	movwf	___aldiv@sign^0,c
   792  00018C                     l1022:
   793  00018C  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
   794  00018E  EFCD  F000         	goto	u280
   795  000192  EFCB  F000         	goto	u281
   796  000196                     u281:
   797  000196  EFD7  F000         	goto	l1028
   798  00019A                     u280:
   799  00019A  1E05               	comf	(___aldiv@dividend+3)^0,f,c
   800  00019C  1E04               	comf	(___aldiv@dividend+2)^0,f,c
   801  00019E  1E03               	comf	(___aldiv@dividend+1)^0,f,c
   802  0001A0  6C02               	negf	___aldiv@dividend^0,c
   803  0001A2  0E00               	movlw	0
   804  0001A4  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
   805  0001A6  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
   806  0001A8  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
   807  0001AA  0E01               	movlw	1
   808  0001AC  1A0B               	xorwf	___aldiv@sign^0,f,c
   809  0001AE                     l1028:
   810  0001AE  0E00               	movlw	0
   811  0001B0  6E0C               	movwf	___aldiv@quotient^0,c
   812  0001B2  0E00               	movlw	0
   813  0001B4  6E0D               	movwf	(___aldiv@quotient+1)^0,c
   814  0001B6  0E00               	movlw	0
   815  0001B8  6E0E               	movwf	(___aldiv@quotient+2)^0,c
   816  0001BA  0E00               	movlw	0
   817  0001BC  6E0F               	movwf	(___aldiv@quotient+3)^0,c
   818  0001BE  5006               	movf	___aldiv@divisor^0,w,c
   819  0001C0  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
   820  0001C2  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
   821  0001C4  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
   822  0001C6  B4D8               	btfsc	status,2,c
   823  0001C8  EFE8  F000         	goto	u291
   824  0001CC  EFEA  F000         	goto	u290
   825  0001D0                     u291:
   826  0001D0  EF20  F001         	goto	l1050
   827  0001D4                     u290:
   828  0001D4  0E01               	movlw	1
   829  0001D6  6E0A               	movwf	___aldiv@counter^0,c
   830  0001D8  EFF4  F000         	goto	l1036
   831  0001DC                     l1034:
   832  0001DC  90D8               	bcf	status,0,c
   833  0001DE  3606               	rlcf	___aldiv@divisor^0,f,c
   834  0001E0  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
   835  0001E2  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
   836  0001E4  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
   837  0001E6  2A0A               	incf	___aldiv@counter^0,f,c
   838  0001E8                     l1036:
   839  0001E8  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
   840  0001EA  EFF9  F000         	goto	u301
   841  0001EE  EFFB  F000         	goto	u300
   842  0001F2                     u301:
   843  0001F2  EFEE  F000         	goto	l1034
   844  0001F6                     u300:
   845  0001F6                     l1038:
   846  0001F6  90D8               	bcf	status,0,c
   847  0001F8  360C               	rlcf	___aldiv@quotient^0,f,c
   848  0001FA  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
   849  0001FC  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
   850  0001FE  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
   851  000200  5006               	movf	___aldiv@divisor^0,w,c
   852  000202  5C02               	subwf	___aldiv@dividend^0,w,c
   853  000204  5007               	movf	(___aldiv@divisor+1)^0,w,c
   854  000206  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
   855  000208  5008               	movf	(___aldiv@divisor+2)^0,w,c
   856  00020A  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
   857  00020C  5009               	movf	(___aldiv@divisor+3)^0,w,c
   858  00020E  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
   859  000210  A0D8               	btfss	status,0,c
   860  000212  EF0D  F001         	goto	u311
   861  000216  EF0F  F001         	goto	u310
   862  00021A                     u311:
   863  00021A  EF18  F001         	goto	l1046
   864  00021E                     u310:
   865  00021E  5006               	movf	___aldiv@divisor^0,w,c
   866  000220  5E02               	subwf	___aldiv@dividend^0,f,c
   867  000222  5007               	movf	(___aldiv@divisor+1)^0,w,c
   868  000224  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
   869  000226  5008               	movf	(___aldiv@divisor+2)^0,w,c
   870  000228  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
   871  00022A  5009               	movf	(___aldiv@divisor+3)^0,w,c
   872  00022C  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
   873  00022E  800C               	bsf	___aldiv@quotient^0,0,c
   874  000230                     l1046:
   875  000230  90D8               	bcf	status,0,c
   876  000232  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
   877  000234  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
   878  000236  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
   879  000238  3206               	rrcf	___aldiv@divisor^0,f,c
   880  00023A  2E0A               	decfsz	___aldiv@counter^0,f,c
   881  00023C  EFFB  F000         	goto	l1038
   882  000240                     l1050:
   883  000240  500B               	movf	___aldiv@sign^0,w,c
   884  000242  B4D8               	btfsc	status,2,c
   885  000244  EF26  F001         	goto	u321
   886  000248  EF28  F001         	goto	u320
   887  00024C                     u321:
   888  00024C  EF30  F001         	goto	l1054
   889  000250                     u320:
   890  000250  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
   891  000252  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
   892  000254  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
   893  000256  6C0C               	negf	___aldiv@quotient^0,c
   894  000258  0E00               	movlw	0
   895  00025A  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
   896  00025C  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
   897  00025E  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
   898  000260                     l1054:
   899  000260  C00C  F002         	movff	___aldiv@quotient,?___aldiv
   900  000264  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
   901  000268  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
   902  00026C  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
   903  000270  0012               	return		;funcret
   904  000272                     __end_of___aldiv:
   905                           	callstack 0
   906                           
   907 ;; *************** function _ISR *****************
   908 ;; Defined at:
   909 ;;		line 76 in file "control.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		i2_USART_Tx
   932 ;; This function is called by:
   933 ;;		Interrupt level 2
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	intcode
   938  000008                     __pintcode:
   939                           	callstack 0
   940  000008                     _ISR:
   941                           	callstack 27
   942                           
   943                           ;incstack = 0
   944  000008  821E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   945  00000A  ED9B  F001         	call	int_func,f	;refresh shadow registers
   946                           
   947                           	psect	intcode_body
   948  000336                     __pintcode_body:
   949                           	callstack 27
   950  000336                     int_func:
   951                           	callstack 27
   952  000336  0006               	pop		; remove dummy address from shadow register refresh
   953  000338                     
   954                           ;control.c: 77:     if (INT0F){
   955  000338  A2F2               	btfss	4082,1,c	;volatile
   956  00033A  EFA1  F001         	goto	i2u45_41
   957  00033E  EFA3  F001         	goto	i2u45_40
   958  000342                     i2u45_41:
   959  000342  EFA7  F001         	goto	i2l1204
   960  000346                     i2u45_40:
   961  000346                     
   962                           ;control.c: 78:         USART_Tx(0);
   963  000346  0E00               	movlw	0
   964  000348  EC2D  F002         	call	i2_USART_Tx
   965  00034C                     
   966                           ;control.c: 79:         INT0F = 0;
   967  00034C  92F2               	bcf	4082,1,c	;volatile
   968  00034E                     i2l1204:
   969                           
   970                           ;control.c: 81:     if (INT1F){
   971  00034E  A0F0               	btfss	4080,0,c	;volatile
   972  000350  EFAC  F001         	goto	i2u46_41
   973  000354  EFAE  F001         	goto	i2u46_40
   974  000358                     i2u46_41:
   975  000358  EFB2  F001         	goto	i2l1210
   976  00035C                     i2u46_40:
   977  00035C                     
   978                           ;control.c: 82:         USART_Tx(1);
   979  00035C  0E01               	movlw	1
   980  00035E  EC2D  F002         	call	i2_USART_Tx
   981  000362                     
   982                           ;control.c: 83:         INT1F = 0;
   983  000362  90F0               	bcf	4080,0,c	;volatile
   984  000364                     i2l1210:
   985                           
   986                           ;control.c: 85:     if (RBIF){
   987  000364  A0F2               	btfss	4082,0,c	;volatile
   988  000366  EFB7  F001         	goto	i2u47_41
   989  00036A  EFB9  F001         	goto	i2u47_40
   990  00036E                     i2u47_41:
   991  00036E  EFEA  F001         	goto	i2l65
   992  000372                     i2u47_40:
   993  000372                     
   994                           ;control.c: 86:         if (!PORTBbits.RB4){
   995  000372  B881               	btfsc	129,4,c	;volatile
   996  000374  EFBE  F001         	goto	i2u48_41
   997  000378  EFC0  F001         	goto	i2u48_40
   998  00037C                     i2u48_41:
   999  00037C  EFC5  F001         	goto	i2l58
  1000  000380                     i2u48_40:
  1001  000380                     
  1002                           ;control.c: 87:             USART_Tx(0);
  1003  000380  0E00               	movlw	0
  1004  000382  EC2D  F002         	call	i2_USART_Tx
  1005                           
  1006                           ;control.c: 88:         }
  1007  000386  EFE9  F001         	goto	i2l1222
  1008  00038A                     i2l58:
  1009  00038A  BA81               	btfsc	129,5,c	;volatile
  1010  00038C  EFCA  F001         	goto	i2u49_41
  1011  000390  EFCC  F001         	goto	i2u49_40
  1012  000394                     i2u49_41:
  1013  000394  EFD1  F001         	goto	i2l60
  1014  000398                     i2u49_40:
  1015  000398                     
  1016                           ;control.c: 90:             USART_Tx(3);
  1017  000398  0E03               	movlw	3
  1018  00039A  EC2D  F002         	call	i2_USART_Tx
  1019                           
  1020                           ;control.c: 91:         }
  1021  00039E  EFE9  F001         	goto	i2l1222
  1022  0003A2                     i2l60:
  1023  0003A2  BC81               	btfsc	129,6,c	;volatile
  1024  0003A4  EFD6  F001         	goto	i2u50_41
  1025  0003A8  EFD8  F001         	goto	i2u50_40
  1026  0003AC                     i2u50_41:
  1027  0003AC  EFDD  F001         	goto	i2l62
  1028  0003B0                     i2u50_40:
  1029  0003B0                     
  1030                           ;control.c: 93:             USART_Tx(4);
  1031  0003B0  0E04               	movlw	4
  1032  0003B2  EC2D  F002         	call	i2_USART_Tx
  1033                           
  1034                           ;control.c: 94:         }
  1035  0003B6  EFE9  F001         	goto	i2l1222
  1036  0003BA                     i2l62:
  1037  0003BA  BE81               	btfsc	129,7,c	;volatile
  1038  0003BC  EFE2  F001         	goto	i2u51_41
  1039  0003C0  EFE4  F001         	goto	i2u51_40
  1040  0003C4                     i2u51_41:
  1041  0003C4  EFE9  F001         	goto	i2l61
  1042  0003C8                     i2u51_40:
  1043  0003C8                     
  1044                           ;control.c: 96:             USART_Tx(5);
  1045  0003C8  0E05               	movlw	5
  1046  0003CA  EC2D  F002         	call	i2_USART_Tx
  1047  0003CE  EFE9  F001         	goto	i2l1222
  1048  0003D2                     i2l61:
  1049  0003D2                     i2l1222:
  1050                           
  1051                           ;control.c: 99:         RBIF = 0;
  1052  0003D2  90F2               	bcf	4082,0,c	;volatile
  1053  0003D4                     i2l65:
  1054  0003D4  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1055  0003D6  0011               	retfie		f
  1056  0003D8                     __end_of_ISR:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function i2_USART_Tx *****************
  1060 ;; Defined at:
  1061 ;;		line 28 in file "LibreriaMicros.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  data            1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  data            1    0[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1078 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_ISR
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text6
  1089  00045A                     __ptext6:
  1090                           	callstack 0
  1091  00045A                     i2_USART_Tx:
  1092                           	callstack 27
  1093                           
  1094                           ;incstack = 0
  1095                           ;i2USART_Tx@data stored from wreg
  1096  00045A  6E01               	movwf	i2USART_Tx@data^0,c
  1097  00045C                     
  1098                           ;LibreriaMicros.c: 29:     TXREG = data;
  1099  00045C  C001  FFAD         	movff	i2USART_Tx@data,4013	;volatile
  1100  000460  0012               	return		;funcret
  1101  000462                     __end_ofi2_USART_Tx:
  1102                           	callstack 0
  1103  0000                     
  1104                           	psect	rparam
  1105  0000                     
  1106                           	psect	temp
  1107  00001E                     btemp:
  1108                           	callstack 0
  1109  00001E                     	ds	1
  1110  0000                     int$flags	set	btemp
  1111  0000                     wtemp8	set	btemp+1
  1112  0000                     ttemp5	set	btemp+1
  1113  0000                     ttemp6	set	btemp+4
  1114  0000                     ttemp7	set	btemp+8
  1115                           
  1116                           	psect	idloc
  1117                           
  1118                           ;Config register IDLOC0 @ 0x200000
  1119                           ;	unspecified, using default values
  1120  200000                     	org	2097152
  1121  200000  FF                 	db	255
  1122                           
  1123                           ;Config register IDLOC1 @ 0x200001
  1124                           ;	unspecified, using default values
  1125  200001                     	org	2097153
  1126  200001  FF                 	db	255
  1127                           
  1128                           ;Config register IDLOC2 @ 0x200002
  1129                           ;	unspecified, using default values
  1130  200002                     	org	2097154
  1131  200002  FF                 	db	255
  1132                           
  1133                           ;Config register IDLOC3 @ 0x200003
  1134                           ;	unspecified, using default values
  1135  200003                     	org	2097155
  1136  200003  FF                 	db	255
  1137                           
  1138                           ;Config register IDLOC4 @ 0x200004
  1139                           ;	unspecified, using default values
  1140  200004                     	org	2097156
  1141  200004  FF                 	db	255
  1142                           
  1143                           ;Config register IDLOC5 @ 0x200005
  1144                           ;	unspecified, using default values
  1145  200005                     	org	2097157
  1146  200005  FF                 	db	255
  1147                           
  1148                           ;Config register IDLOC6 @ 0x200006
  1149                           ;	unspecified, using default values
  1150  200006                     	org	2097158
  1151  200006  FF                 	db	255
  1152                           
  1153                           ;Config register IDLOC7 @ 0x200007
  1154                           ;	unspecified, using default values
  1155  200007                     	org	2097159
  1156  200007  FF                 	db	255
  1157                           
  1158                           	psect	config
  1159                           
  1160                           ;Config register CONFIG1L @ 0x300000
  1161                           ;	unspecified, using default values
  1162                           ;	PLL Prescaler Selection bits
  1163                           ;	PLLDIV = 0x0, unprogrammed default
  1164                           ;	System Clock Postscaler Selection bits
  1165                           ;	CPUDIV = 0x0, unprogrammed default
  1166                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1167                           ;	USBDIV = 0x0, unprogrammed default
  1168  300000                     	org	3145728
  1169  300000  00                 	db	0
  1170                           
  1171                           ;Config register CONFIG1H @ 0x300001
  1172                           ;	unspecified, using default values
  1173                           ;	Oscillator Selection bits
  1174                           ;	FOSC = 0x5, unprogrammed default
  1175                           ;	Fail-Safe Clock Monitor Enable bit
  1176                           ;	FCMEN = 0x0, unprogrammed default
  1177                           ;	Internal/External Oscillator Switchover bit
  1178                           ;	IESO = 0x0, unprogrammed default
  1179  300001                     	org	3145729
  1180  300001  05                 	db	5
  1181                           
  1182                           ;Config register CONFIG2L @ 0x300002
  1183                           ;	unspecified, using default values
  1184                           ;	Power-up Timer Enable bit
  1185                           ;	PWRT = 0x1, unprogrammed default
  1186                           ;	Brown-out Reset Enable bits
  1187                           ;	BOR = 0x3, unprogrammed default
  1188                           ;	Brown-out Reset Voltage bits
  1189                           ;	BORV = 0x3, unprogrammed default
  1190                           ;	USB Voltage Regulator Enable bit
  1191                           ;	VREGEN = 0x0, unprogrammed default
  1192  300002                     	org	3145730
  1193  300002  1F                 	db	31
  1194                           
  1195                           ;Config register CONFIG2H @ 0x300003
  1196                           ;	unspecified, using default values
  1197                           ;	Watchdog Timer Enable bit
  1198                           ;	WDT = 0x1, unprogrammed default
  1199                           ;	Watchdog Timer Postscale Select bits
  1200                           ;	WDTPS = 0xF, unprogrammed default
  1201  300003                     	org	3145731
  1202  300003  1F                 	db	31
  1203                           
  1204                           ; Padding undefined space
  1205  300004                     	org	3145732
  1206  300004  FF                 	db	255
  1207                           
  1208                           ;Config register CONFIG3H @ 0x300005
  1209                           ;	unspecified, using default values
  1210                           ;	CCP2 MUX bit
  1211                           ;	CCP2MX = 0x1, unprogrammed default
  1212                           ;	PORTB A/D Enable bit
  1213                           ;	PBADEN = 0x1, unprogrammed default
  1214                           ;	Low-Power Timer 1 Oscillator Enable bit
  1215                           ;	LPT1OSC = 0x0, unprogrammed default
  1216                           ;	MCLR Pin Enable bit
  1217                           ;	MCLRE = 0x1, unprogrammed default
  1218  300005                     	org	3145733
  1219  300005  83                 	db	131
  1220                           
  1221                           ;Config register CONFIG4L @ 0x300006
  1222                           ;	unspecified, using default values
  1223                           ;	Stack Full/Underflow Reset Enable bit
  1224                           ;	STVREN = 0x1, unprogrammed default
  1225                           ;	Single-Supply ICSP Enable bit
  1226                           ;	LVP = 0x1, unprogrammed default
  1227                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1228                           ;	ICPRT = 0x0, unprogrammed default
  1229                           ;	Extended Instruction Set Enable bit
  1230                           ;	XINST = 0x0, unprogrammed default
  1231                           ;	Background Debugger Enable bit
  1232                           ;	DEBUG = 0x1, unprogrammed default
  1233  300006                     	org	3145734
  1234  300006  85                 	db	133
  1235                           
  1236                           ; Padding undefined space
  1237  300007                     	org	3145735
  1238  300007  FF                 	db	255
  1239                           
  1240                           ;Config register CONFIG5L @ 0x300008
  1241                           ;	unspecified, using default values
  1242                           ;	Code Protection bit
  1243                           ;	CP0 = 0x1, unprogrammed default
  1244                           ;	Code Protection bit
  1245                           ;	CP1 = 0x1, unprogrammed default
  1246                           ;	Code Protection bit
  1247                           ;	CP2 = 0x1, unprogrammed default
  1248                           ;	Code Protection bit
  1249                           ;	CP3 = 0x1, unprogrammed default
  1250  300008                     	org	3145736
  1251  300008  0F                 	db	15
  1252                           
  1253                           ;Config register CONFIG5H @ 0x300009
  1254                           ;	unspecified, using default values
  1255                           ;	Boot Block Code Protection bit
  1256                           ;	CPB = 0x1, unprogrammed default
  1257                           ;	Data EEPROM Code Protection bit
  1258                           ;	CPD = 0x1, unprogrammed default
  1259  300009                     	org	3145737
  1260  300009  C0                 	db	192
  1261                           
  1262                           ;Config register CONFIG6L @ 0x30000A
  1263                           ;	unspecified, using default values
  1264                           ;	Write Protection bit
  1265                           ;	WRT0 = 0x1, unprogrammed default
  1266                           ;	Write Protection bit
  1267                           ;	WRT1 = 0x1, unprogrammed default
  1268                           ;	Write Protection bit
  1269                           ;	WRT2 = 0x1, unprogrammed default
  1270                           ;	Write Protection bit
  1271                           ;	WRT3 = 0x1, unprogrammed default
  1272  30000A                     	org	3145738
  1273  30000A  0F                 	db	15
  1274                           
  1275                           ;Config register CONFIG6H @ 0x30000B
  1276                           ;	unspecified, using default values
  1277                           ;	Configuration Register Write Protection bit
  1278                           ;	WRTC = 0x1, unprogrammed default
  1279                           ;	Boot Block Write Protection bit
  1280                           ;	WRTB = 0x1, unprogrammed default
  1281                           ;	Data EEPROM Write Protection bit
  1282                           ;	WRTD = 0x1, unprogrammed default
  1283  30000B                     	org	3145739
  1284  30000B  E0                 	db	224
  1285                           
  1286                           ;Config register CONFIG7L @ 0x30000C
  1287                           ;	unspecified, using default values
  1288                           ;	Table Read Protection bit
  1289                           ;	EBTR0 = 0x1, unprogrammed default
  1290                           ;	Table Read Protection bit
  1291                           ;	EBTR1 = 0x1, unprogrammed default
  1292                           ;	Table Read Protection bit
  1293                           ;	EBTR2 = 0x1, unprogrammed default
  1294                           ;	Table Read Protection bit
  1295                           ;	EBTR3 = 0x1, unprogrammed default
  1296  30000C                     	org	3145740
  1297  30000C  0F                 	db	15
  1298                           
  1299                           ;Config register CONFIG7H @ 0x30000D
  1300                           ;	unspecified, using default values
  1301                           ;	Boot Block Table Read Protection bit
  1302                           ;	EBTRB = 0x1, unprogrammed default
  1303  30000D                     	org	3145741
  1304  30000D  40                 	db	64
  1305                           tosu	equ	0xFFF
  1306                           tosh	equ	0xFFE
  1307                           tosl	equ	0xFFD
  1308                           stkptr	equ	0xFFC
  1309                           pclatu	equ	0xFFB
  1310                           pclath	equ	0xFFA
  1311                           pcl	equ	0xFF9
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           prodh	equ	0xFF4
  1317                           prodl	equ	0xFF3
  1318                           indf0	equ	0xFEF
  1319                           postinc0	equ	0xFEE
  1320                           postdec0	equ	0xFED
  1321                           preinc0	equ	0xFEC
  1322                           plusw0	equ	0xFEB
  1323                           fsr0h	equ	0xFEA
  1324                           fsr0l	equ	0xFE9
  1325                           wreg	equ	0xFE8
  1326                           indf1	equ	0xFE7
  1327                           postinc1	equ	0xFE6
  1328                           postdec1	equ	0xFE5
  1329                           preinc1	equ	0xFE4
  1330                           plusw1	equ	0xFE3
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           bsr	equ	0xFE0
  1334                           indf2	equ	0xFDF
  1335                           postinc2	equ	0xFDE
  1336                           postdec2	equ	0xFDD
  1337                           preinc2	equ	0xFDC
  1338                           plusw2	equ	0xFDB
  1339                           fsr2h	equ	0xFDA
  1340                           fsr2l	equ	0xFD9
  1341                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in COMRAM

    _ISR->i2_USART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1374
                                             23 COMRAM     6     6      0
                         _USART_Init
                           _USART_Tx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             15 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0      22
                         i2_USART_Tx
 ---------------------------------------------------------------------------------
 (4) i2_USART_Tx                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___aldiv
   _USART_Tx
   ___awdiv

 _ISR (ROOT)
   i2_USART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1D      1D       1       30.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 27 20:25:57 2020

                     l36 0070                       l38 007E                       l94 0446  
                     l97 0458             ___awdiv@sign 0007                      l340 0334  
                    l188 0270                      l844 0454                      u300 01F6  
                    u301 01F2                      u310 021E                      u311 021A  
                    u320 0250                      u400 00C0                      u321 024C  
                    u401 00BC                      u330 0284                      u410 00DC  
                    u331 0280                      u411 00D8                      u340 029E  
                    u420 0102                      u341 029A                      u421 00FE  
                    u270 0178                      u350 02C4                      u430 0128  
                    u271 0174                      u351 02C0                      u431 0124  
                    u280 019A                      u360 02E2                      u440 014E  
                    u281 0196                      u361 02DE                      u441 014A  
                    u290 01D4                      u370 02FE                      u291 01D0  
                    u371 02FA                      u380 0324                      _ISR 0008  
                    u381 0320                      u390 007E                      u391 007A  
                   ?_ISR 0001                     l1020 0188                     l1100 02E2  
                   l1030 01BE                     l1022 018C                     l1014 0166  
                   l1110 030E                     l1102 02E8                     l1040 0200  
                   l1032 01D4                     l1024 019A                     l1016 016A  
                   l1104 02FE                     l1112 0314                     l1042 021E  
                   l1034 01DC                     l1050 0240                     l1026 01AA  
                   l1018 0178                     l1114 0324                     l1106 0306  
                   l1130 002E                     l1122 0012                     l1052 0250  
                   l1044 022E                     l1036 01E8                     l1028 01AE  
                   l1060 03DC                     l1116 032C                     l1108 0308  
                   l1140 0038                     l1132 0030                     l1124 0026  
                   l1054 0260                     l1046 0230                     l1038 01F6  
                   l1070 0440                     l1062 0438                     l1150 0044  
                   l1142 003A                     l1134 0032                     l1126 0026  
                   l1048 023A                     l1072 0442                     l1064 043A  
                   l1080 0284                     l1160 005C                     l1152 0048  
                   l1144 003C                     l1136 0034                     l1128 002E  
                   l1074 0444                     l1066 043C                     l1058 03D8  
                   l1090 02AA                     l1082 028C                     l1170 0066  
                   l1162 005E                     l1154 004A                     l1146 003E  
                   l1138 0036                     l1068 043E                     l1092 02B2  
                   l1084 0290                     l1076 0272                     l1180 00C0  
                   l1172 0068                     l1164 0060                     l1156 0052  
                   l1148 0040                     l1094 02C4                     l1086 029E  
                   l1078 0276                     l1190 0128                     l1182 00DC  
                   l1174 006E                     l1166 0062                     l1158 005A  
                   l1096 02CC                     l1088 02A6                     l1192 0132  
                   l1184 00E6                     l1176 008C                     l1168 0064  
                   l1098 02D4                     l1194 014E                     l1186 0102  
                   l1178 00A8                     l1196 0158                     l1188 010C  
                   _RBIF 007F90                     _RCIF 007CF5                     i2l60 03A2  
                   i2l61 03D2                     i2l62 03BA              main@lectura 001C  
                   i2l65 03D4                     i2l58 038A                     i2l97 0460  
                   _main 0012                     btemp 001E                     start 000E  
           ___param_bank 000000                    ??_ISR 0002              ?i2_USART_Tx 0001  
        __end_of___aldiv 0272                    ?_main 0001          __end_of___awdiv 0336  
        ___awdiv@divisor 0004                    _INT0F 007F91                    _INT1F 007F80  
        ___awdiv@counter 0006                    _RCREG 000FAE                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _SPBRG 000FAF                    _TXREG 000FAD  
       __end_of_USART_Tx 045A             USART_Tx@data 0002                    ttemp5 001F  
                  ttemp6 0022                    ttemp7 0026                    status 000FD8  
                  wtemp8 001F              ?_USART_Init 0010          __initialization 0448  
           __end_of_main 0166                   ??_main 0018            __activetblptr 000000  
                 _ADCON1 000FC1                   _ADRESH 000FC4         ___awdiv@dividend 0002  
                 i2l1120 045C                   i2l1200 0346                   i2l1210 0364  
                 i2l1202 034C                   i2l1220 03C8                   i2l1212 0372  
                 i2l1204 034E                   i2l1222 03D2                   i2l1214 0380  
                 i2l1206 035C                   i2l1216 0398                   i2l1208 0362  
                 i2l1218 03B0                   i2l1198 0338                   _TMR1IF 007CF0  
    __size_ofi2_USART_Tx 0008                ??___aldiv 000A                ??___awdiv 0006  
       ___awdiv@quotient 0008      __size_of_USART_Init 0070               __accesstop 0060  
__end_of__initialization 0448            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_USART_Tx 0001           i2USART_Tx@data 0001             ??i2_USART_Tx 0001  
             ??_USART_Tx 0002                  _INTEDG0 007F8E                  _INTEDG1 007F8D  
                i2u50_40 03B0                  i2u50_41 03AC                  i2u51_40 03C8  
                i2u51_41 03C4                  i2u45_40 0346                  i2u45_41 0342  
                i2u46_40 035C                  i2u46_41 0358                  i2u47_40 0372  
                i2u47_41 036E                  i2u48_40 0380                  i2u48_41 037C  
                i2u49_40 0398                  i2u49_41 0394       __end_ofi2_USART_Tx 0462  
           ??_USART_Init 0014                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 0166                  ___awdiv 0272                  __pcinit 0448  
                __ramtop 0800                  __ptext0 0012                  __ptext1 0272  
                __ptext2 0452                  __ptext3 03D8                  __ptext4 0166  
                __ptext6 045A           USART_Init@baud 0010             __size_of_ISR 03D0  
              _T1CONbits 000FCD         ___aldiv@dividend 0002       __end_of_USART_Init 0448  
         __pintcode_body 0336     end_of_initialization 0448                  int_func 0336  
              _RCSTAbits 000FAB         ___aldiv@quotient 000C                _PORTBbits 000F81  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
      __size_of_USART_Tx 0008      start_initialization 0448              __end_of_ISR 03D8  
              __pintcode 0008                 ?___aldiv 0002                 ?___awdiv 0002  
        ___aldiv@divisor 0006          ___aldiv@counter 000A                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _USART_Tx 0452               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000         __size_of___aldiv 010C         __size_of___awdiv 00C4  
          __size_of_main 0154          _USART_Init$1313 0014                 int$flags 001E  
             _INTCONbits 000FF2                 intlevel2 0000          main@umbralNuevo 001A  
        main@umbralViejo 0018               i2_USART_Tx 045A             ___aldiv@sign 000B  
             _USART_Init 03D8  
